---
title: "Take-home Exercise 4: Prototyping Modules for Visual Analytics Shiny Application"- (WIP)
date: March 5,2024
date-modified: "last-modified"
toc: true
execute: 
  eval: true
  echo: true
  warning: false
  message: false
code-fold: true
code-summary: "Show the code"
---

# 1 Overview

In this exercise, we are required to select one of the module of your proposed Shiny application and complete the following tasks:

-   To evaluate and determine the necessary R packages needed for your Shiny application are supported in R CRAN,

-   To prepare and test the specific R codes can be run and returned the correct output as expected,

-   To determine the parameters and outputs that will be exposed on the Shiny applications, and

-   To select the appropriate Shiny UI components for exposing the parameters determine above.

# 2 Project Information

In this project, we will analyze weather across different areas in Singapore and build an interactive R Shiny application. The application will consists of four sections :

1.  **Homepage tab**: Users have an overview of the dataset used in application. It will include a map of Singapore and interactivity elements that allow users to view the dataset at different points in time.
2.  **EDA and CDA tab**: Users can explore the distribution and trends in the dataset for specific periods or locations (station or region), and use statistical analysis to confirm the trends.
3.  **Time series analysis**: Users can explore the time series decomposition of the different variables, and select the type of model that they would like to use for univariate time series forecasting.
4.  **Clustering time series analysis**: Users can explore grouping stations with similar weather patterns or grouping time periods with similar patterns. The user would then be able to choose different models to forecast the grouped data.

For this exercise, we will focus on the second module.

# 3 Data Preparation

## 3.1 Installing R packages

The code chunk below uses `p_load()` of **pacman** package to check if multiple packages are installed in the computer. If they are, then they will be launched into R.

```{r}
pacman::p_load(tidyverse, naniar,imputeTS, DT, lubridate,ggplot2,ggstatsplot,plotly,
                   patchwork,ggthemes,dplyr,ggridges,gridExtra)
```

## 3.2 Importing Original Data

We will use the weather dataset for 63 stations between 2014 to 2023 from [Meteorological Service Singapore (MSS)](http://www.weather.gov.sg/climate-historical-daily/)

### Import final dataset

```{r}
weather <- read_rds("data/weather_imputed_11stations.rds") 
```

```{r}
summary(weather)
```

```{r}
weather$unique(station)

```

# 4 Mean Temperature (°C)

## 4.1 Across all stations for a specific year

### Exploratory Data Analysis

```{r}
#| fig-width: 12

#To filter data for the year 2021
allstations_2021 <- weather %>%    
  group_by(Station) %>%           
  filter(Year == 2021)


plot_ly(data = allstations_2021,
             x = ~Station,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = I('lightblue'),  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "Mean Temperature across all Stations in 2021"),
       xaxis = list(title = "Station"),
       yaxis = list(title = "Mean Temperature (°C)"))

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily mean temperature in 2021 across different stations are equal

H1 : Daily mean temperature in 2021 across different station are not equal

```{r}
#| fig-width: 12
#| fig-height: 5

ggbetweenstats(data = allstations_2021,
  x = Station,
  y = `Mean Temperature (°C)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Mean Temperature across all Stations")

```

## 4.2 One station across different years

### Ang Mo Kio station

### Exploratory Data Analysis

```{r}
#To filter Ang Mo Kio data
AMK_data <- weather %>%    
  filter(Station == "Ang Mo Kio")

ggplot(AMK_data, 
       aes(x = `Mean Temperature (°C)`, y = factor(Year))) +
  geom_density_ridges(fill = "lightblue",
                      alpha = 0.7,
                      color = "white") +
  labs(title = "Distribution of Mean Temperature in Ang Mo Kio between 2021-2023",
    x = "Mean Temperature (°C)",
    y = "Year") +
  theme_ridges()+
  theme(legend.position = "none")



plot_ly(data = AMK_data,
             x = ~Year,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = I('lightblue'),  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "Mean Temperature in Ang Mo Kio between 2021-2023"),
       xaxis = list(title = "Year"),
       yaxis = list(title = "Mean Temperature (°C)"))

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily mean temperature in Ang Mo Kio across different years are equal

H1 : Daily mean temperature in Ang Mo Kio across different years are not equal

```{r}
ggbetweenstats(data = AMK_data,
  x = Year,
  y = `Mean Temperature (°C)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Mean Temperature by Year in Ang Mo Kio")

```

## 4.3 One station across different months in one year

### Ang Mo Kio station

```{r}
#To filter AMK data for the year 2021

AMK_data_2021 <- AMK_data %>%    
  filter(Date >= as.Date("2021-01-01") & Date <= as.Date("2021-12-31"))

ggplot(AMK_data, 
       aes(x = `Mean Temperature (°C)`, y = factor(Month_Name))) +
  geom_density_ridges(fill = "lightblue",
                      alpha = 0.7,
                      color = "white") +
  labs(title = "Distribution of Mean Temperature in Ang Mo Kio between 2021",
    x = "Mean Temperature (°C)",
    y = "Month") +
  theme_ridges()+
  theme(legend.position = "none")

plot_ly(data = AMK_data_2021,
             x = ~Month_Name,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = I('lightblue'),  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "Mean Temperature in Ang Mo Kio between 2021-2023"),
       xaxis = list(title = "Month"),
       yaxis = list(title = "Mean Temperature (°C)"))

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily mean temperature in Ang Mo Kio across different months are equal

H1 : Daily mean temperature in Ang Mo Kio across different months are not equal

```{r}
ggbetweenstats(data = AMK_data_2021,
  x = Month_Name,
  y = `Mean Temperature (°C)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Mean Temperature by Months in Ang Mo Kio")

```

## 4.4 Multiple stations across different years

### Exploratory Data Analysis

```{r}
#To filter Ang Mo Kio and Changi data

selected_stations = c("Seletar", "Changi")


twostations_data <- weather %>%    
  filter(Station%in% selected_stations)

ggplot(twostations_data, aes(x = `Mean Temperature (°C)`, y = factor(Year), fill = Station)) +
  geom_density_ridges(alpha = 0.7, color = "white") +
  scale_fill_manual(values = c("Ang Mo Kio" = "lightblue", "Changi" = "darkblue")) +
  labs(title = sprintf("Distribution of Mean Temperature for %s between 2021 to 2023", selected_stations),
       x = "Mean Temperature (°C)",
       y = "Year") +
  theme_ridges()+ 
  theme(legend.position = "none")

# filter each year
twostations_data_2021 <- twostations_data %>%
  filter(Year == 2021)
twostations_data_2022 <- twostations_data %>%
  filter(Year == 2022)
twostations_data_2023 <- twostations_data %>%
  filter(Year == 2023)

p1 <- plot_ly(data = twostations_data_2021,
             x = ~Station,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = ~Station,  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "2021"),
       xaxis = list(title = "Station"),
       yaxis = list(title = "Mean Temperature (°C)"))

p2 <- plot_ly(data = twostations_data_2022,
             x = ~Station,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = ~Station,  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "2022"),
       xaxis = list(title = "Station"),
       yaxis = list(title = "Mean Temperature (°C)"))

p3 <- plot_ly(data = twostations_data_2023,
             x = ~Station,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "darkblue"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'lightblue',
                      line = list(width = 0.5, 
                                  color = 'darkblue')), 
        scalemode = 'count',
        color = ~Station,  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "2023"),
       xaxis = list(title = "Station"),
       yaxis = list(title = "Mean Temperature (°C)"))

subplot(p1, p2, p3, 
                         nrows = 1, # One row
                         shareX = TRUE, # Use the same x axis
                         shareY = TRUE, # Use the same y axis
                         titleX = TRUE, # Share x-axis title
                         titleY = TRUE) # Share y-axis title

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily mean temperature in Ang Mo Kio across different months are equal

H1 : Daily mean temperature in Ang Mo Kio across different months are not equal

```{r}
grouped_ggbetweenstats(data = twostations_data,
  x = Station,
  y = `Mean Temperature (°C)`,
  grouping.var = Year,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE)
```

## 4.6 Average across all stations in 2021 to 2023

### Exploratory Data Analysis

```{r}
#To average mean temperature across all stations
allstations_mean <- weather %>%
  group_by(Date) %>%
  summarise(`Mean Temperature (°C)` = mean(`Mean Temperature (°C)`)) %>%
  mutate(Year = year(Date),
         Month = month(Date, label = TRUE),
         Day = day(Date))

ggplot(allstations_mean, 
       aes(x = `Mean Temperature (°C)`, y = factor(Year))) +
  geom_density_ridges(fill = "orange",
                      alpha = 0.7,
                      color = "white") +
  labs(title = "Distribution of Mean Temperature between 2021-2023",
    x = "Mean Temperature (°C)",
    y = "Year") +
  theme_ridges()+
  theme(legend.position = "none")

plot_ly(data = allstations_mean,
             x = ~Year,
             y = ~`Mean Temperature (°C)`,
         box = list(visible = T),
         meanline = list(visible = T, 
                         color = "red"),
        type = "violin",
        spanmode = 'hard',
        marker = list(opacity = 0.5, 
                      color = 'orange',
                      line = list(width = 0.5, 
                                  color = 'red')), 
        scalemode = 'count',
        color = I('orange'),  
        hoveron = "points+kde",
        line = list(width=1)) %>%
layout(title = list(text = "Mean Temperature between 2021-2023"),
       xaxis = list(title = "Year"),
       yaxis = list(title = "Mean Temperature (°C)"))

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily mean temperature across different years are equal

H1 : Daily mean temperature across different years are not equal

```{r}
ggbetweenstats(data = allstations_mean,
  x = Year,
  y = `Mean Temperature (°C)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Mean Temperature across 2021-2023")
```

# 5 Daily Rainfall Total (mm)

## 5.1 Across different stations for a specific year

### Exploratory Data Analysis

```{r}
p1 <- ggplot(allstations_2021, aes(x = Station, y = `Daily Rainfall Total (mm)`)) +
  geom_point(aes(color = `Daily Rainfall Total (mm)`,
                 text = paste('Year:', Year,'Month:',Month,'Day:', Day,
                              'Rainfall:',`Daily Rainfall Total (mm)`)),
             size=2.5) +
  labs(title = "Daily Rainfall by Station in 2021",
       x = "Station",
       y = "Daily Rainfall Total (mm)") +
  theme_minimal() +
  scale_color_gradient(low = "lightblue", high = "darkblue")


ggplotly(p1, tooltip = "text") %>%
  layout( xaxis = list(tickangle = 45,
      tickfont = list(size = 12)),
      hovermode = 'closest') %>%
  config(displayModeBar = FALSE)

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily rainfall in 2021 across different stations are equal

H1 : Daily rainfall in 2021 across different station are not equal

```{r}
#| fig-width: 12
#| fig-height: 5
ggbetweenstats(data = allstations_2021,
  x = Station,
  y = `Daily Rainfall Total (mm)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Rainfall by Station in 2021")

```

## 5.2 Specific station across different years

### Exploratory Data Analysis

```{r}
#To filter Ang Mo Kio data
AMK_data <- weather %>%    
  filter(Station == "Ang Mo Kio")

ggplot(AMK_data, 
       aes(x = `Daily Rainfall Total (mm)`, y = factor(Year))) +
  geom_density_ridges(fill = "lightblue",
                      alpha = 0.7,
                      color = "white") +
  labs(title = "Distribution of Daily rainfall in Ang Mo Kio between 2021-2023",
    x = "Daily Rainfall (mm)",
    y = "Year") +
  theme_ridges()+
  theme(legend.position = "none")

p1 <- ggplot(AMK_data, aes(x = Year, y = `Daily Rainfall Total (mm)`)) +
  geom_point(aes(color = `Daily Rainfall Total (mm)`,
                 text = paste('Year:', Year,'Day:', Day,
                              'Rainfall:',`Daily Rainfall Total (mm)`)),
             size=2.5) +
  labs(title = "Daily Rainfall by Year in Ang Mo Kio",
       x = "Station",
       y = "Daily Rainfall Total (mm)") +
  theme_minimal() +
  scale_color_gradient(low = "lightblue", high = "darkblue")+
  scale_x_continuous(breaks = seq(2021, 2023, by = 1)) 

ggplotly(p1, tooltip = "text") %>%
  layout(hovermode = 'closest') %>%
  config(displayModeBar = FALSE)

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily rainfall in Ang Mo Kio across different years are equal

H1 : Daily rainfall in Ang Mo Kio across different years are not equal

```{r}
ggbetweenstats(data = AMK_data,
  x = Year,
  y = `Daily Rainfall Total (mm)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Rainfall by Year in Ang Mo Kio")

```

## 5.3 Across average of all stations in 2021 to 2023

### Exploratory Data Analysis

```{r}
#To average rainfall across all stations
allstations_rainfall_mean <- weather %>%
  group_by(Date) %>%
  summarise(`Daily Rainfall Total (mm)` = mean(`Daily Rainfall Total (mm)`)) %>%
  mutate(Year = year(Date),
         Month = month(Date, label = TRUE),
         Day = day(Date))

ggplot(allstations_rainfall_mean, 
       aes(x = `Daily Rainfall Total (mm)`, y = factor(Year))) +
  geom_density_ridges(fill = "lightblue",
                      alpha = 0.7,
                      color = "white") +
  labs(title = "Distribution of Rainfall between 2021-2023",
    x = "Daily Rainfall Total (mm)",
    y = "Year") +
  theme_ridges()+
  theme(legend.position = "none")

p1 <- ggplot(allstations_rainfall_mean, aes(x = Year, y = `Daily Rainfall Total (mm)`)) +
  geom_point(aes(color = `Daily Rainfall Total (mm)`,
                 text = paste('Year:', Year,'Day:', Day,
                              'Rainfall:',`Daily Rainfall Total (mm)`)),
             size=2.5) +
  labs(title = "Daily Rainfall by Year in Ang Mo Kio",
       x = "Station",
       y = "Daily Rainfall Total (mm)") +
  theme_minimal() +
  scale_color_gradient(low = "lightblue", high = "darkblue")+
  scale_x_continuous(breaks = seq(2021, 2023, by = 1)) 

ggplotly(p1, tooltip = "text") %>%
  layout(hovermode = 'closest') %>%
  config(displayModeBar = FALSE)

```

### Confirmatory Data Analysis

[**Anova test**]{.underline}

Hypothesis

H0 : Daily rainfall across different years are equal

H1 : Daily rainfall across different years are not equal

```{r}
ggbetweenstats(data = allstations_rainfall_mean,
  x = Year,
  y = `Daily Rainfall Total (mm)`,
  type="np", # for non-parametric
  mean.ci = TRUE, 
  pairwise.comparisons = TRUE, 
  pairwise.annotation = FALSE,
  pairwise.display = "none", 
  sig.level = NA,
  p.adjust.method = "fdr",
  messages = FALSE,
  title = "Rainfall across different years")

```

#categories variables

## by stations

```{r}
quantiles <- quantile(allstations_2021$`Daily Rainfall Total (mm)`, 
                      probs = c(0, 0.25, 0.5, 0.75, 1), 
                      na.rm = TRUE)

allstations_2021$RainfallCategory <- cut(allstations_2021$`Daily Rainfall Total (mm)`,
                                         breaks = c(-Inf, quantiles[2], quantiles[3], quantiles[4], Inf),
                                         labels = c("No Rain", "Low", "Moderate", "High"),
                                         include.lowest = TRUE)

```

```{r}
ggbarstats(allstations_2021, 
           x = RainfallCategory, 
           y = Station)
```

## by years

```{r}
quantiles <- quantile(allstations_rainfall_mean$`Daily Rainfall Total (mm)`, 
                      probs = c(0, 0.25, 0.5, 0.75, 1), 
                      na.rm = TRUE)

allstations_rainfall_mean$RainfallCategory <- cut(allstations_rainfall_mean$`Daily Rainfall Total (mm)`,
                                         breaks = c(-Inf, quantiles[2], quantiles[3], quantiles[4], Inf),
                                         labels = c("No Rain", "Low", "Moderate", "High"),
                                         include.lowest = TRUE)

```

```{r}
ggbarstats(allstations_rainfall_mean, 
           x = RainfallCategory, 
           y = Year)
```

# correlation

```{r}
ggscatterstats(data = allstations_2021,
  x = `Daily Rainfall Total (mm)`,
  y = `Mean Temperature (°C)`,
  marginal = FALSE)

```
