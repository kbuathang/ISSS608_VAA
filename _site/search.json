[
  {
    "objectID": "In-class_Ex/In-class_Ex6/In-class_Ex6.html",
    "href": "In-class_Ex/In-class_Ex6/In-class_Ex6.html",
    "title": "Horizon Plot",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(ggHoriPlot, ggthemes, tidyverse)\n\n\n\nFor the purpose of this hands-on exercise, Average Retail Prices Of Selected Consumer Items will be used.\nUse the code chunk below to import the AVERP.csv file into R environment.\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`))\n\n\n\n\nNext, the code chunk below will be used to plot the horizon graph.\n\naverp %&gt;% \n  filter(Date &gt;= \"2018-01-01\") %&gt;%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex6/In-class_Ex6.html#step-1-importing-data",
    "href": "In-class_Ex/In-class_Ex6/In-class_Ex6.html#step-1-importing-data",
    "title": "Horizon Plot",
    "section": "",
    "text": "For the purpose of this hands-on exercise, Average Retail Prices Of Selected Consumer Items will be used.\nUse the code chunk below to import the AVERP.csv file into R environment.\n\naverp &lt;- read_csv(\"data/AVERP.csv\") %&gt;%\n  mutate(`Date` = dmy(`Date`))"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex6/In-class_Ex6.html#step-2-plotting-the-horizon-graph",
    "href": "In-class_Ex/In-class_Ex6/In-class_Ex6.html#step-2-plotting-the-horizon-graph",
    "title": "Horizon Plot",
    "section": "",
    "text": "Next, the code chunk below will be used to plot the horizon graph.\n\naverp %&gt;% \n  filter(Date &gt;= \"2018-01-01\") %&gt;%\n  ggplot() +\n  geom_horizon(aes(x = Date, y=Values), \n               origin = \"midpoint\", \n               horizonscale = 6)+\n  facet_grid(`Consumer Items`~.) +\n    theme_few() +\n  scale_fill_hcl(palette = 'RdBu') +\n  theme(panel.spacing.y=unit(0, \"lines\"), strip.text.y = element_text(\n    size = 5, angle = 0, hjust = 0),\n    legend.position = 'none',\n    axis.text.y = element_blank(),\n    axis.text.x = element_text(size=7),\n    axis.title.y = element_blank(),\n    axis.title.x = element_blank(),\n    axis.ticks.y = element_blank(),\n    panel.border = element_blank()\n    ) +\n    scale_x_date(expand=c(0,0), date_breaks = \"3 month\", date_labels = \"%b%y\") +\n  ggtitle('Average Retail Prices of Selected Consumer Items (Jan 2018 to Dec 2022)')"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "",
    "text": "According to an office report as shown in the info graphic below,\n\nDaily mean temperature are projected to increase by 1.4 to 4.6, and\nThe contrast between the wet months (November to January) and dry month (February and June to September) is likely to be more pronounced."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#installing-r-packages",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "3.1 Installing R packages",
    "text": "3.1 Installing R packages\nThe code chunk below uses p_load() of pacman package to check if multiple packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(readr,tidyverse, patchwork,ggplot2,ggthemes,\n               hrbrthemes,dplyr,ggridges,ggdist,plotly,crosstalk,DT)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#importing-data",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "3.2 Importing Data",
    "text": "3.2 Importing Data\nThe dataset for November, representing the wet season, and February, representing the dry season, for the years 1983, 1993, 2003, 2013, and 2023 at Changi has been chosen for analysis.\nThe code chunk below imports all data into R environment by using read_csv() function of readr package.\n\nNov23_data &lt;- read_csv(\"data/DAILYDATA_S24_202311.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nNov13_data &lt;- read_csv(\"data/DAILYDATA_S24_201311.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nNov03_data &lt;- read_csv(\"data/DAILYDATA_S24_200311.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nNov93_data &lt;- read_csv(\"data/DAILYDATA_S24_199311.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nNov83_data &lt;- read_csv(\"data/DAILYDATA_S24_198311.csv\", locale = locale(encoding = \"ISO-8859-4\"))\n\n\nFeb23_data &lt;- read_csv(\"data/DAILYDATA_S24_202302.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nFeb13_data &lt;- read_csv(\"data/DAILYDATA_S24_201302.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nFeb03_data &lt;- read_csv(\"data/DAILYDATA_S24_200302.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nFeb93_data &lt;- read_csv(\"data/DAILYDATA_S24_199302.csv\", locale = locale(encoding = \"ISO-8859-4\"))\nFeb83_data &lt;- read_csv(\"data/DAILYDATA_S24_198302.csv\", locale = locale(encoding = \"ISO-8859-4\"))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#combining-data",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#combining-data",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "3.3 Combining Data",
    "text": "3.3 Combining Data\nIn this section, we will combine all data from different year and rename column daily rainfall total (mm).\n\n#combining November data\ncombinedNov_rainfall &lt;- bind_rows(Nov23_data,Nov13_data,Nov03_data,Nov93_data,Nov83_data)\n\ncombinedNov_rainfall &lt;- combinedNov_rainfall %&gt;%\n  select(Year,Month,Day,`Daily Rainfall Total (mm)`)%&gt;%\n  rename(\"daily_rainfall\" = `Daily Rainfall Total (mm)`)\n\n#combining February data\ncombinedFeb_rainfall &lt;- bind_rows(Feb23_data,Feb13_data,Feb03_data,Feb93_data,Feb83_data)\n\ncombinedFeb_rainfall &lt;- combinedFeb_rainfall %&gt;%\n  select(Year,Month,Day,`Daily Rainfall Total (mm)`)%&gt;%\n  rename(\"daily_rainfall\" = `Daily Rainfall Total (mm)`)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#wrangling-data",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#wrangling-data",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "3.4 Wrangling Data",
    "text": "3.4 Wrangling Data\nIn this section, we will calculate mean and median rainfall in November for each year.\n\nNov_mean &lt;- combinedNov_rainfall %&gt;%\n  group_by(Year) %&gt;%\n  summarise(meanNov_rainfall = round(mean(daily_rainfall, na.rm = TRUE), 2))\n\nNov_median &lt;- combinedNov_rainfall %&gt;%\n  group_by(Year) %&gt;%\n  summarise(medianNov_rainfall = round(median(daily_rainfall, na.rm = TRUE), 2))\n\nFeb_mean &lt;- combinedFeb_rainfall %&gt;%\n  group_by(Year) %&gt;%\n  summarise(meanFeb_rainfall = round(mean(daily_rainfall, na.rm = TRUE), 2))\n\nFeb_median &lt;- combinedFeb_rainfall %&gt;%\n  group_by(Year) %&gt;%\n  summarise(medianFeb_rainfall = round(median(daily_rainfall, na.rm = TRUE), 2))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#summarizing-data",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#summarizing-data",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "3.5 Summarizing Data",
    "text": "3.5 Summarizing Data\nA statistical summary of final datasets by using summary()\nNovember rainfall data\n\nsummary(combinedNov_rainfall)\n\n      Year          Month         Day       daily_rainfall  \n Min.   :1983   Min.   :11   Min.   : 1.0   Min.   : 0.000  \n 1st Qu.:1993   1st Qu.:11   1st Qu.: 8.0   1st Qu.: 0.000  \n Median :2003   Median :11   Median :15.5   Median : 1.150  \n Mean   :2003   Mean   :11   Mean   :15.5   Mean   : 7.499  \n 3rd Qu.:2013   3rd Qu.:11   3rd Qu.:23.0   3rd Qu.: 9.750  \n Max.   :2023   Max.   :11   Max.   :30.0   Max.   :71.400  \n\n\nFebruary rainfall data\n\nsummary(combinedFeb_rainfall)\n\n      Year          Month        Day        daily_rainfall   \n Min.   :1983   Min.   :2   Min.   : 1.00   Min.   :  0.000  \n 1st Qu.:1993   1st Qu.:2   1st Qu.: 7.75   1st Qu.:  0.000  \n Median :2003   Median :2   Median :14.50   Median :  0.000  \n Mean   :2003   Mean   :2   Mean   :14.50   Mean   :  6.909  \n 3rd Qu.:2013   3rd Qu.:2   3rd Qu.:21.25   3rd Qu.:  2.800  \n Max.   :2023   Max.   :2   Max.   :28.00   Max.   :154.800"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#distribution-of-daily-rainfall",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#distribution-of-daily-rainfall",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "4.1 Distribution of Daily Rainfall",
    "text": "4.1 Distribution of Daily Rainfall\nThe below ridge plots illustrate the distribution of daily rainfall in November and February across various years at Changi.\n\np1 &lt;- ggplot(combinedNov_rainfall, \n       aes(x = daily_rainfall, y = factor(Year))) +\n  geom_density_ridges(fill = \"lightblue\") +\n  labs(title = \"Distribution of Daily Rainfall in November between 1983-2023\",\n    x = \"Daily Rainfall (mm)\",\n    y = \"Year\") +\n  theme_ridges()+\n  theme(legend.position = \"none\")\n\np2 &lt;- ggplot(combinedFeb_rainfall, \n       aes(x = daily_rainfall, y = factor(Year))) +\n  geom_density_ridges(fill = \"#FEC26B\") +\n  labs(title = \"Distribution of Daily Rainfall in February between 1983-2023\",\n    x = \"Daily Rainfall (mm)\",\n    y = \"Year\") +\n  theme_ridges()+\n  theme(legend.position = \"none\")\n\np1+p2\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nBased on the plots, we can observe the following:\n\nThere is higher rainfall in wet season which is in November. The peaks are broader and the tail extend further to the right that indicate the higher daily rainfall amounts.\nThe frequency of daily rainfall amount in February tend to be close to 0 mm which indicate that there are many days with little to no rain.\nBoth distributions are right-skewed. However, skewness is more evident in February as it is the dry season.\nThe intensity of rainfall is generally greater in November than in February. This aligns with the characterization of these months as wet and dry seasons."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#interactive-visualization",
    "href": "Take-home_Ex/Take-home_Ex3/Take-home_Ex3.html#interactive-visualization",
    "title": "Take-home Exercise 3: Be Weatherwise or Otherwise",
    "section": "4.2 Interactive Visualization",
    "text": "4.2 Interactive Visualization\nThe interactive plots illustrate daily rainfall in November and February across various years at Changi\n\n\nCode\np3 &lt;- ggplot(combinedNov_rainfall, aes(x = Year, y = daily_rainfall)) +\n  geom_point(aes(color = `daily_rainfall`,\n                 text = paste('Year:', Year,'Day:', Day,\n                              'Rainfall:',daily_rainfall)),\n             size=2.5) +\n  labs(title = \"Daily Rainfall in November: from 1983 to 2023\",\n       x = \"Year\",\n       y = \"Daily Rainfall Total (mm)\") +\n  theme_minimal() +\n  geom_line(data = Nov_mean, aes(x = Year, y = meanNov_rainfall), \n            color = \"red\", \n            size = 0.3, \n            linetype = \"dashed\") + \n  geom_point(data = Nov_mean, aes(x = Year, y = meanNov_rainfall), \n             color = \"red\", \n             size = 2.5) +\n  annotate(\"text\", x = 2000, y = 8, \n           label = \"Mean\", \n           color = \"red\",\n           size=3)+\n  geom_line(data = Nov_median, aes(x = Year, y = medianNov_rainfall), \n            color = \"purple\", \n            size = 0.3, \n            linetype = \"dashed\") + \n  geom_point(data = Nov_median, aes(x = Year, y = medianNov_rainfall), \n             color = \"purple\", \n             size = 2.5) +\n  annotate(\"text\", x = 2000, y = 3, \n           label = \"Median\", \n           color = \"purple\",\n           size= 3)+\n  scale_x_continuous(breaks = seq(1983, 2023, by = 10)) +\n  scale_color_gradient(low = \"lightblue\", high = \"blue\")\n\n\nggplotly(p3, tooltip = \"text\") %&gt;%\n  layout(hovermode = 'closest') %&gt;%\n  config(displayModeBar = FALSE)\n\n\n\n\n\n\n\n\nCode\np4 &lt;- ggplot(combinedFeb_rainfall, aes(x = Year, y = daily_rainfall)) +\n  geom_point(aes(color = `daily_rainfall`,\n                 text = paste('Year:', Year,'Day:', Day,\n                              'Rainfall:',daily_rainfall)),\n             size=2.5) +\n  labs(title = \"Daily Rainfall in February: from 1983 to 2023\",\n       x = \"Year\",\n       y = \"Daily Rainfall Total (mm)\") +\n  theme_minimal() +\n  geom_line(data = Feb_mean, aes(x = Year, y = meanFeb_rainfall), \n            color = \"red\", \n            size = 0.3, \n            linetype = \"dashed\") + \n  geom_point(data = Feb_mean, aes(x = Year, y = meanFeb_rainfall), \n             color = \"red\", \n             size = 2.5) +\n  annotate(\"text\", x = 2000, y = 8, \n           label = \"Mean\", \n           color = \"red\",\n           size=3)+\n  geom_line(data = Feb_median, aes(x = Year, y = medianFeb_rainfall), \n            color = \"purple\", \n            size = 0.3, \n            linetype = \"dashed\") + \n  geom_point(data = Feb_median, aes(x = Year, y = medianFeb_rainfall), \n             color = \"purple\", \n             size = 2.5) +\n  annotate(\"text\", x = 2000, y = 3, \n           label = \"Median\", \n           color = \"purple\",\n           size= 3)+\n  scale_x_continuous(breaks = seq(1983, 2023, by = 10)) +\n  scale_color_gradient(low = \"lightblue\", high = \"blue\")\n\n\nggplotly(p4, tooltip = \"text\") %&gt;%\n  layout(hovermode = 'closest') %&gt;%\n  config(displayModeBar = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nObservation\n\n\n\nBased on the two plots for daily rainfall in November (wet season) and February (dry season) from 1983 to 2023, the following observations can be made:\n\nThere is a greater number of days with recorded rainfall in November as it shows from the denser clustering of points above zero. While in February, it has more record of no or very low rainfall as many points at or near zero. This reflects dry season.\nIn November, the data are spread out with several instances of moderate to high rainfall, but in February, it shows fewer instances of rainfall.\nNeither month shows a clear trend in the mean or median rainfall over the 40-year span. This can indicate stability in the overall rainfall patterns for both the wet and dry seasons.\nThe extreme values in February are notably higher than those in November, which is unexpected given that February is the dry season. The is due to a monsoon surge, a strengthening of winds over the South China Sea. This results extensive rain clouds to form over the surrounding region, as reported by (CNA website)."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "",
    "text": "Andreas Schleicher, the director of OECD education,shared in a BBC article that “Singapore managed to achieve excellence without wide differences between children from wealthy and disadvantaged families.” (2016) Additionally, many Singapore’s Minister for Education have adopted the slogan “every school a good school.” However, the perception among the public is that there are still disparities that exist, especially between the elite schools and neighborhood school, between students from families with higher socioeconomic status and those with relatively lower socioeconomic status and immigration and non-immigration families."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#installing-r-packages",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "3.1 Installing R packages",
    "text": "3.1 Installing R packages\nThe code chunk below uses p_load() of pacman package to check if multiple packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, haven, ggrepel, patchwork,ggplot2, \n               ggthemes, hrbrthemes,dplyr,tidyr,knitr,ggridges)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#importing-data",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "3.2 Importing Data",
    "text": "3.2 Importing Data\nThe 2022 Programme for International Student Assessment (PISA) data released on December 5, 2022 will be used. PISA global education survey every three years to assess the education systems worldwide through testing 15 year old students in the subjects of mathematics, reading, and science.\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\nFiltering dataSelecting variables\n\n\nFilter Singaporean data by using filter()\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\n\nThe code chunk below uses select() to include selected variables.\n\nstu_qqq_SG_v2 &lt;- stu_qqq_SG %&gt;%\n  select(CNTSTUID,PV1MATH,PV1READ,PV1SCIE,STRATUM,ST004D01T,ESCS) %&gt;%\n  rename(STUDENT_ID=CNTSTUID,\n         MATH=PV1MATH,\n         READING=PV1READ,\n         SCIENCE=PV1SCIE,\n         SCHOOL=STRATUM,\n         SOCIOECONOMIC_STATUS=ESCS,\n         GENDER=ST004D01T)\n\n\nAccording to OECD, it stated that single plausible value can be used to analzye in the exploratory phase of the data. Using one or five plausible values will not make any significant difference. Therefore, we will proceed with PV1 only for further analysis."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#wrangling-data",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#wrangling-data",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "3.3 Wrangling data",
    "text": "3.3 Wrangling data\n\nData structureDuplicatesMissing valuesRecoding and Binning\n\n\nThe code chunk below uses glimpse to check the data structure\n\nglimpse(stu_qqq_SG_v2)\n\nRows: 6,606\nColumns: 7\n$ STUDENT_ID           &lt;dbl&gt; 70200001, 70200002, 70200003, 70200004, 70200005,…\n$ MATH                 &lt;dbl&gt; 639.004, 697.191, 693.710, 427.317, 436.462, 569.…\n$ READING              &lt;dbl&gt; 676.298, 625.585, 620.116, 381.495, 448.199, 469.…\n$ SCIENCE              &lt;dbl&gt; 710.634, 670.646, 666.095, 340.308, 456.333, 475.…\n$ SCHOOL               &lt;chr&gt; \"SGP01\", \"SGP01\", \"SGP01\", \"SGP01\", \"SGP01\", \"SGP…\n$ GENDER               &lt;dbl&gt; 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 1…\n$ SOCIOECONOMIC_STATUS &lt;dbl&gt; 0.1836, 0.8261, -1.0357, -0.9606, 0.0856, 0.1268,…\n\n\n\n\nThe code chunk below uses duplicated() to check duplicates\n\nstu_qqq_SG_v2[duplicated(stu_qqq_SG_v2),]\n\n# A tibble: 0 × 7\n# ℹ 7 variables: STUDENT_ID &lt;dbl&gt;, MATH &lt;dbl&gt;, READING &lt;dbl&gt;, SCIENCE &lt;dbl&gt;,\n#   SCHOOL &lt;chr&gt;, GENDER &lt;dbl&gt;, SOCIOECONOMIC_STATUS &lt;dbl&gt;\n\n\nFrom the result, there is no duplicate.\n\n\nThe code chunk below uses to check missing values\n\nsum(is.na(stu_qqq_SG_v2))\n\n[1] 47\n\n\nThe result shows that there are missing values\nThe code chunk below uses drop_na() to remove missing values\n\nstu_qqq_SG_v3 &lt;- stu_qqq_SG_v2 %&gt;%\n  drop_na()\nsum(is.na(stu_qqq_SG_v3))\n\n[1] 0\n\n\n\n\nThe code below use recode() to recode gender and nitle() to bin socioeconomic status\n\nstu_qqq_SG_final &lt;- stu_qqq_SG_v3 %&gt;%\n  mutate(GENDER = recode(GENDER,\n                         `1` = \"Female\",\n                         `2` = \"Male\"),\n         SCHOOL = recode(SCHOOL,\n                         \"SGP01\" = \"Public School\",\n                         \"SGP03\" = \"Private School\")) %&gt;%\n  mutate(SOCIOECONOMIC_STATUS = ntile(SOCIOECONOMIC_STATUS, 4), .after = SOCIOECONOMIC_STATUS) %&gt;%\n  mutate(SOCIOECONOMIC_STATUS = recode(SOCIOECONOMIC_STATUS,\n                                      `1` = \"Highly Disadvantaged\",\n                                      `2` = \"Disadvantaged\",\n                                      `3` = \"Advantaged\",\n                                      `4` = \"Highly Advantaged\")) %&gt;%\n  mutate(SOCIOECONOMIC_STATUS = factor(SOCIOECONOMIC_STATUS, \n                                      levels = c(\"Highly Disadvantaged\", \"Disadvantaged\", \n                                                 \"Advantaged\", \"Highly Advantaged\"),\n                                      ordered = TRUE))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#distribution-of-students-performance",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#distribution-of-students-performance",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "5.1 Distribution of Students’ Performance",
    "text": "5.1 Distribution of Students’ Performance\nThe below panel is shown the distribution of Singapore students’ performance in mathematics, reading, and science.\n\nMATHSREADINGSCIENCE\n\n\n\n\nCode\n#calculate Mean and Median \nmean_math &lt;- mean(stu_qqq_SG_final$MATH,na.rm = TRUE)\nmedian_math &lt;-median(stu_qqq_SG_final$MATH,na.rm = TRUE)\n\nggplot(stu_qqq_SG_final, aes(x = MATH)) +\n  geom_histogram(bins = 30, fill = \"beige\", color = \"grey\") +\n  scale_x_continuous(limits = c(0, 1000)) + \n  labs(title =\"Distribution of Math Scores\", y=\"count\") +\n  geom_vline(xintercept = mean_math,\n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1) +\n  annotate(\"text\", x = 480, y = 900,\n           label = paste(\"Mean =\", round(mean_math, 2)), \n           color = \"red\", \n           size = 3.5)+  \n  geom_vline(xintercept = median_math,\n             color = \"blue\", \n             linetype = \"dashed\", \n             size = 1) +\n  annotate(\"text\", x = 700, y = 900,\n           label = paste(\"Median =\", round(median_math, 2)), \n           color = \"blue\", \n           size = 3.5)\n\n\n\n\n\n\n\n\n\nCode\nmean_reading &lt;- mean(stu_qqq_SG_final$READING, na.rm = TRUE)\nmedian_reading &lt;- median(stu_qqq_SG_final$READING, na.rm = TRUE)\n\nggplot(stu_qqq_SG_final, aes(x = READING)) +\n  geom_histogram(bins = 30, fill = \"pink\", color = \"grey\") +\n  scale_x_continuous(limits = c(0, 1000)) + \n  labs(title =\"Distribution of Reading Scores\", y=\"count\") +\n  geom_vline(xintercept = mean_reading,\n             color = \"red\", \n             linetype = \"dashed\", \n             size = 1) +\n  annotate(\"text\", x = 400, y = 900,\n           label = paste(\"Mean =\", round(mean_reading, 2)), \n           color = \"red\", \n           size = 3.5)+  \n  geom_vline(xintercept = median_reading,\n             color = \"blue\", \n             linetype = \"dashed\", \n             size = 1) +\n  annotate(\"text\", x = 700, y = 900,\n           label = paste(\"Median =\", round(median_reading, 2)), \n           color = \"blue\", \n           size = 3.5)\n\n\n\n\n\n\n\n\n\nCode\nmean_science &lt;- mean(stu_qqq_SG_final$SCIENCE, na.rm = TRUE)\nmedian_science &lt;- median(stu_qqq_SG_final$SCIENCE, na.rm = TRUE)\n\nggplot(stu_qqq_SG_final, aes(x = SCIENCE)) +\n  geom_histogram(bins = 30, fill = \"lightblue\", color = \"grey\") +\n  scale_x_continuous(limits = c(0, 1000)) +\n  labs(title = \"Distribution of Science Scores\", y = \"Count\") +\n  geom_vline(xintercept = mean_science,\n             color = \"red\", \n             linetype = \"dashed\",\n             size = 1) +\n  annotate(\"text\", x = 480, y = 900,  \n           label = paste(\"Mean =\", round(mean_science, 2)), \n           color = \"red\", \n           size = 3.5) +  \n  geom_vline(xintercept = median_science,\n             color = \"blue\",\n             linetype = \"dashed\", \n             size = 1) +\n  annotate(\"text\", x = 700, y = 900,  \n           label = paste(\"Median =\", round(median_science, 2)), \n           color = \"blue\", \n           size = 3.5)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe distribution among maths, science, and reading appear to be quite similar.\nHowever, when comparing all three subjects, maths has the highest values for both mean and median, while reading has the lowest mean and median scores."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-gender",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-gender",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "5.2 Performance and Gender",
    "text": "5.2 Performance and Gender\nTo find some insights between the performance of each subjects and gender, we will use density graph.\n\n\nCode\np1 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = MATH,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#AB1858\", \"white\")) +\n  scale_color_manual(values = c(\"#AB1858\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))\n\np2 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = READING,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#AB1858\", \"white\")) +\n  scale_color_manual(values = c(\"#AB1858\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))\n\np3 &lt;- ggplot(data=stu_qqq_SG_final, \n       aes(x = SCIENCE,\n           color=GENDER,\n           fill=GENDER)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#AB1858\", \"white\")) +\n  scale_color_manual(values = c(\"#AB1858\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))\n\n(p1/p2/p3)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe distributions of performance in each subject between gender are slightly different.\nThe density plot of females have a higher peak compared to males. This suggests that more females tend to have the similar scores, whereas males’ score appear to be more scattered indicating a wider range of performance among them."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-school-type",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-school-type",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "5.3 Performance and School Type",
    "text": "5.3 Performance and School Type\nIn this section, we will use density graph and boxplots to find insights related to performance and type of schools\n\nMATHSREADINGSCIENCE\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = MATH, x=SCHOOL,fill=SCHOOL)) +\n  geom_boxplot()+\n  scale_y_continuous(limits = c(0, 1000))+\n  theme(legend.position = \"none\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(x = MATH,\n           color=SCHOOL,\n           fill=SCHOOL)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#67B5F3\", \"white\")) +\n  scale_color_manual(values = c(\"#67B5F3\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))+\n  theme(legend.position = c(0.85, 0.85))+\n  labs(title = \"Distribution of Math Scores across Different School Types\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = READING, x=SCHOOL,fill=SCHOOL)) +\n  geom_boxplot()+\n  scale_y_continuous(limits = c(0, 1000))+\n  theme(legend.position = \"none\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(x = READING,\n           color=SCHOOL,\n           fill=SCHOOL)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#67B5F3\", \"white\")) +\n  scale_color_manual(values = c(\"#67B5F3\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))+\n  theme(legend.position = c(0.85, 0.85))+\n  labs(title = \"Distribution of Reading Scores across Different School Types\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = SCIENCE, x=SCHOOL,fill=SCHOOL)) +\n  geom_boxplot()+\n  scale_y_continuous(limits = c(0, 1000))+\n  theme(legend.position = \"none\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(x = SCIENCE,\n           color=SCHOOL,\n           fill=SCHOOL)) +\n  geom_density(linewidth = 0.05, alpha=0.6)+\n  scale_fill_manual(values = c(\"#67B5F3\", \"white\")) +\n  scale_color_manual(values = c(\"#67B5F3\", \"grey\"))+\n  scale_x_continuous(limits = c(0, 1000))+\n  theme(legend.position = c(0.85, 0.85))+\n  labs(title = \"Distribution of Science Scores across Different School Types\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe boxplots of each subject indicate that the average score between private school and public school do not differ. Private schools have slightly higher scores on average. However, there is a notable insights showing that there are more outliers in public schools.\nWhen we examine the density graph, it becomes evident that a higher degree of overlap between two types of schools. This could indicates the greater score diversity within public schools."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-socioeconomic-status",
    "href": "Take-home_Ex/Take-home_Ex1/Take-home_Ex1.html#performance-and-socioeconomic-status",
    "title": "Take-home Exercise 1: Creating data visualisation beyond default",
    "section": "5.4 Performance and Socioeconomic Status",
    "text": "5.4 Performance and Socioeconomic Status\nThe boxplot and ridges graph will be used to identify the relationship between socioeconomic status and the performance on each subject\n\nMATHSREADINGSCIENCE\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = MATH, x=SOCIOECONOMIC_STATUS,fill=SOCIOECONOMIC_STATUS)) +\n  geom_boxplot(fill = \"beige\")+\n  scale_y_continuous(limits = c(0, 1000))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)+\n  theme(legend.position = \"none\")\n\n\n\n\n\nCode\nggplot(data = stu_qqq_SG_final, \n       aes(x = MATH, y = SOCIOECONOMIC_STATUS, fill = SOCIOECONOMIC_STATUS)) +\n  geom_density_ridges() +\n  scale_x_continuous(limits = c(0, 1000)) +\n  labs(title = \"Distribution of Math Scores by Socioeconomic Status\", \n       y = \"Socioeconomic Status\", x = \"Math Score\") +\n  theme_ridges()+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = READING, x=SOCIOECONOMIC_STATUS,fill=SOCIOECONOMIC_STATUS)) +\n  geom_boxplot(fill=\"pink\")+\n  scale_y_continuous(limits = c(0, 1000))+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)+\n  theme(legend.position = \"none\")\n\n\n\n\n\nCode\nggplot(data = stu_qqq_SG_final, \n       aes(x = READING, y = SOCIOECONOMIC_STATUS, fill = SOCIOECONOMIC_STATUS)) +\n  geom_density_ridges() +\n  scale_x_continuous(limits = c(0, 1000)) +\n  labs(title = \"Distribution of Reading Scores by Socioeconomic Status\", \n       y = \"Socioeconomic Status\", x = \"Reading Score\") +\n  theme_ridges()+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(data=stu_qqq_SG_final, \n       aes(y = SCIENCE, x=SOCIOECONOMIC_STATUS,fill=SOCIOECONOMIC_STATUS)) +\n  geom_boxplot(fill=\"lightblue\")+\n  scale_y_continuous(limits = c(0, 1000))+\n    stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"black\",        \n               size=2)+\n  theme(legend.position = \"none\")\n\n\n\n\n\nCode\nggplot(data = stu_qqq_SG_final, \n       aes(x = SCIENCE, y = SOCIOECONOMIC_STATUS, fill = SOCIOECONOMIC_STATUS)) +\n  geom_density_ridges() +\n  scale_x_continuous(limits = c(0, 1000)) +\n  labs(title = \"Distribution of Science Scores by Socioeconomic Status\", \n       y = \"Socioeconomic Status\", x = \"Science Score\") +\n  theme_ridges()+\n  theme(legend.position = \"none\")\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nThe boxplot for each subjects reveal significant difference in performance based on socioeconomic status. Students with higher socioeconomic status tend to achieve better scores. This demonstrates a positive correlation between socioeconomic status and scores. In other words, students from more advantaged backgrounds tend to perform better.\nThe density ridges plots show that students with more advantaged socioeconomic status cluster around higher score ranges, while those with less advantaged socioeconomic status tend to cluster around lower score ranges. This reaffirms that socioeconomic advantages are associated with better academic outcome."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "",
    "text": "In this exercise, we will use the following our R packages: scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table and tidyverse.\n\nLoading R packageImporting DataExamining the data structurePreparing DataFinal dataset\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(scales, viridis, lubridate, ggthemes, gridExtra, readxl, knitr, data.table, CGPfunctions, ggHoriPlot, tidyverse)\n\n\n\nThe code chunk below imports eventlog.csv into R environment by using read_csv() function of readr package.\n\nattacks &lt;- read_csv(\"data/eventlog.csv\")\n\n\n\nNext, we will use kable() to review the structure of the imported data frame\n\nkable(head(attacks))\n\n\n\n\ntimestamp\nsource_country\ntz\n\n\n\n\n2015-03-12 15:59:16\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:00:48\nFR\nEurope/Paris\n\n\n2015-03-12 16:02:26\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:02:38\nUS\nAmerica/Chicago\n\n\n2015-03-12 16:03:22\nCN\nAsia/Shanghai\n\n\n2015-03-12 16:03:45\nCN\nAsia/Shanghai\n\n\n\n\n\nThere are three columns which are timestamp, source_country and tz.\n\ntimestamp field stores date-time values in POSIXct format.\nsource_country field stores the source of the attack. It is in ISO 3166-1 alpha-2 country code.\ntz field stores time zone of the source IP address.\n\n\n\n\n\nWe need to derive two new fields which are wkday and hour before we can plot the calendar heatmap.\n\nmake_hr_wkday &lt;- function(ts, sc, tz) {\n  real_times &lt;- ymd_hms(ts, \n                        tz = tz[1], \n                        quiet = TRUE)\n  dt &lt;- data.table(source_country = sc,\n                   wkday = weekdays(real_times),\n                   hour = hour(real_times))\n  return(dt)\n  }\n\n\n\n\n\n\n\nNote\n\n\n\n\nymd_hms() and hour() are from lubridate package, and\nweekdays() is a base R function.\n\n\n\n\n\n\n\nwkday_levels &lt;- c('Saturday', 'Friday', \n                  'Thursday', 'Wednesday', \n                  'Tuesday', 'Monday', \n                  'Sunday')\n\nattacks &lt;- attacks %&gt;%\n  group_by(tz) %&gt;%\n  do(make_hr_wkday(.$timestamp, \n                   .$source_country, \n                   .$tz)) %&gt;% \n  ungroup() %&gt;% \n  mutate(wkday = factor(\n    wkday, levels = wkday_levels),\n    hour  = factor(\n      hour, levels = 0:23))\n\n\n\n\n\n\n\nNote\n\n\n\nBeside extracting the necessary data into attacks data frame, mutate() of dplyr package is used to convert wkday and hour fields into factor so they will be ordered when plotting.\n\n\n\n\n\n\nkable(head(attacks))\n\n\n\n\ntz\nsource_country\nwkday\nhour\n\n\n\n\nAfrica/Cairo\nBG\nSaturday\n20\n\n\nAfrica/Cairo\nTW\nSunday\n6\n\n\nAfrica/Cairo\nTW\nSunday\n8\n\n\nAfrica/Cairo\nCN\nSunday\n11\n\n\nAfrica/Cairo\nUS\nSunday\n15\n\n\nAfrica/Cairo\nCA\nMonday\n11"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#deriving-attack-by-country-object",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#deriving-attack-by-country-object",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "3.1 Deriving attack by country object",
    "text": "3.1 Deriving attack by country object\nIn order to identify the top 4 countries with the highest number of attacks, we need to do the followings:\n\ncount the number of attacks by country,\ncalculate the percent of attackes by country, and\nsave the results in a tibble data frame.\n\n\nattacks_by_country &lt;- count(\n  attacks, source_country) %&gt;%\n  mutate(percent = percent(n/sum(n))) %&gt;%\n  arrange(desc(n))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#preparing-the-tidy-data-frame",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#preparing-the-tidy-data-frame",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "3.2 Preparing the tidy data frame",
    "text": "3.2 Preparing the tidy data frame\nWe have to extract the attack records of the top 4 countries from attacks data frame and save the data in a new tibble data frame (i.e. top4_attacks).\n\ntop4 &lt;- attacks_by_country$source_country[1:4]\ntop4_attacks &lt;- attacks %&gt;%\n  filter(source_country %in% top4) %&gt;%\n  count(source_country, wkday, hour) %&gt;%\n  ungroup() %&gt;%\n  mutate(source_country = factor(\n    source_country, levels = top4)) %&gt;%\n  na.omit()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-multiple-calender-heatmap-by-using-ggplot2-package.",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-multiple-calender-heatmap-by-using-ggplot2-package.",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "3.3 Plotting the Multiple Calender Heatmap by using ggplot2 package.",
    "text": "3.3 Plotting the Multiple Calender Heatmap by using ggplot2 package.\n\nggplot(top4_attacks, \n       aes(hour, \n           wkday, \n           fill = n)) + \n  geom_tile(color = \"white\", \n          size = 0.1) + \n  theme_tufte(base_family = \"Helvetica\") + \n  coord_equal() +\n  scale_fill_gradient(name = \"# of attacks\",\n                    low = \"yellow\", \n                    high = \"red\") +\n  facet_wrap(~source_country, ncol = 2) +\n  labs(x = NULL, y = NULL, \n     title = \"Attacks on top 4 countries by weekday and time of day\") +\n  theme(axis.ticks = element_blank(),\n        axis.text.x = element_text(size = 7),\n        plot.title = element_text(hjust = 0.5),\n        legend.title = element_text(size = 8),\n        legend.text = element_text(size = 6) )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#data-import",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#data-import",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "4.1 Data Import",
    "text": "4.1 Data Import\nThe code chunk below imports arrivals_by_air.xlsx by using read_excel() of readxl package and save it as a tibble data frame called air.\n\nair &lt;- read_excel(\"data/arrivals_by_air.xlsx\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#deriving-month-and-year-fields",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#deriving-month-and-year-fields",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "4.2 Deriving month and year fields",
    "text": "4.2 Deriving month and year fields\nIn this step, we will derive two new fields called month and year are derived from Month-Year field.\n\nair$month &lt;- factor(month(air$`Month-Year`), \n                    levels=1:12, \n                    labels=month.abb, \n                    ordered=TRUE) \nair$year &lt;- year(ymd(air$`Month-Year`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#extracting-the-target-country",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#extracting-the-target-country",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "4.3 Extracting the target country",
    "text": "4.3 Extracting the target country\nNext, the code chunk below is use to extract data for the target country.\n\nVietnam &lt;- air %&gt;% \n  select(`Vietnam`, \n         month, \n         year) %&gt;%\n  filter(year &gt;= 2010)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#computing-year-average-arrivals-by-month",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#computing-year-average-arrivals-by-month",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "4.4 Computing year average arrivals by month",
    "text": "4.4 Computing year average arrivals by month\nThe code chunk below uses group_by() and summarise() of dplyr to compute year average arrivals by month.\n\nhline.data &lt;- Vietnam %&gt;% \n  group_by(month) %&gt;%\n  summarise(avgvalue = mean(`Vietnam`))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-cycle-plot",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-cycle-plot",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "4.5 Plotting the cycle plot",
    "text": "4.5 Plotting the cycle plot\nThe code chunk below is used to plot the cycle plot.\n\nggplot() + \n  geom_line(data=Vietnam,\n            aes(x=year, \n                y=`Vietnam`, \n                group=month), \n            colour=\"black\") +\n  geom_hline(aes(yintercept=avgvalue), \n             data=hline.data, \n             linetype=6, \n             colour=\"red\", \n             size=0.5) + \n  facet_grid(~month, scales = \"free_y\") +\n  labs(axis.text.x = element_blank(),\n       title = \"Visitor arrivals from Vietnam by air, Jan 2010-Dec 2019\") +\n  xlab(\"\") +\n  ylab(\"No. of Visitors\") +\n  theme_minimal()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#data-import-1",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#data-import-1",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "5.1 Data Import",
    "text": "5.1 Data Import\nImport the rice data set into R environment by using the code chunk below.\n\nrice &lt;- read_csv(\"data/rice.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-slopegraph",
    "href": "Hands-on_Ex/Hands-on_Ex6/Hands-on_Ex6.html#plotting-the-slopegraph",
    "title": "Hands-on Exercise 6:Visualising and Analysing Time-oriented Data",
    "section": "5.2 Plotting the slopegraph",
    "text": "5.2 Plotting the slopegraph\nNext, code chunk below will be used to plot a basic slopegraph as shown below\n\nrice %&gt;% \n  mutate(Year = factor(Year)) %&gt;%\n  filter(Year %in% c(1961, 1980)) %&gt;%\n  newggslopegraph(Year, Yield, Country,\n                Title = \"Rice Yield of Top 11 Asian Counties\",\n                SubTitle = \"1961-1980\",\n                Caption = NULL)\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk\n\n\n\nFor effective data visualization design, factor() is used convert the value type of Year field from numeric to factor"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "",
    "text": "In this exercise, we will use the following our R packages.\n\nggparcoord() of GGally package to plot statistic parallel coordinates plot,\nparcoords package to plot interactive parallel coordinates plots, and\nparallelPlot package to plot interactive parallel coordinates plots.\n\n\nLoading R packageImporting Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(GGally, parallelPlot, tidyverse)\n\n\n\nThe code chunk below imports WHData-2018.csv into R environment by using read_csv() function of readr package.\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#a-simple-parallel-coordinates",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#a-simple-parallel-coordinates",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "2.1 A simple parallel coordinates",
    "text": "2.1 A simple parallel coordinates\nCode chunk below shows a typical syntax used to plot a basic static parallel coordinates plot by using ggparcoord().\n\nggparcoord(data = wh, \n           columns = c(7:12))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNotice that only two argument namely data and columns is used. Data argument is used to map the data object (i.e. wh) and columns is used to select the columns for preparing the parallel coordinates plot."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#a-parallel-coordinates-with-boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#a-parallel-coordinates-with-boxplot",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "2.2 A parallel coordinates with boxplot",
    "text": "2.2 A parallel coordinates with boxplot\nThe basic parallel coordinates failed to reveal any meaning understanding of the World Happiness measures. In this section, ggparcoord() will be used to makeover the plot.\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Parallel Coordinates Plot of World Happines Variables\")\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ngroupColumn argument is used to group the observations (i.e. parallel lines) by using a single variable (i.e. Region) and colour the parallel coordinates lines by region name.\nscale argument is used to scale the variables in the parallel coordinate plot by using uniminmax method. The method univariately scale each variable so the minimum of the variable is zero and the maximum is one.\nalphaLines argument is used to reduce the intensity of the line color to 0.2. The permissible value range is between 0 to 1.\nboxplot argument is used to turn on the boxplot by using logical TRUE. The default is FALSE.\ntitle argument is used to provide the parallel coordinates plot a title."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#parallel-coordinates-with-facet",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#parallel-coordinates-with-facet",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "2.3 Parallel coordinates with facet",
    "text": "2.3 Parallel coordinates with facet\nIn the code chunk below, facet_wrap() of ggplot2 is used to plot 10 small multiple parallel coordinates plots. Each plot represent one geographical region such as East Asia.\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#rotating-x-axis-text-label",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#rotating-x-axis-text-label",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "2.4 Rotating x-axis text label",
    "text": "2.4 Rotating x-axis text label\nWe can rotate axis text labels using theme() function in ggplot2 as shown in the code chunk below.\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30))\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nTo rotate x-axis text labels, we use axis.text.x as argument to theme() function. And we specify element_text(angle = 30) to rotate the x-axis text by an angle 30 degree."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#adjusting-the-rotated-x-axis-text-label",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#adjusting-the-rotated-x-axis-text-label",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "2.5 Adjusting the rotated x-axis text label",
    "text": "2.5 Adjusting the rotated x-axis text label\nRotating x-axis text labels to 30 degrees makes the label overlap with the plot and we can avoid this by adjusting the text location using hjust argument to theme’s text element with element_text(). We use axis.text.x as we want to change the look of x-axis text.\n\nggparcoord(data = wh, \n           columns = c(7:12), \n           groupColumn = 2,\n           scale = \"uniminmax\",\n           alphaLines = 0.2,\n           boxplot = TRUE, \n           title = \"Multiple Parallel Coordinates Plots of World Happines Variables by Region\") +\n  facet_wrap(~ Region) + \n  theme(axis.text.x = element_text(angle = 30, hjust=1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#the-basic-plot",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "3.1 The basic plot",
    "text": "3.1 The basic plot\nThe code chunk below plot an interactive parallel coordinates plot by using parallelPlot().\n\nwh &lt;- wh %&gt;%\n  select(\"Happiness score\", c(7:12))\nparallelPlot(wh,\n             width = 320,\n             height = 250)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#rotate-axis-label",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#rotate-axis-label",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "3.2 Rotate axis label",
    "text": "3.2 Rotate axis label\nIn the code chunk below, rotateTitle argument is used to avoid overlapping axis labels.\n\nparallelPlot(wh,\n             rotateTitle = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#changing-the-color-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#changing-the-color-scheme",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "3.3 Changing the color scheme",
    "text": "3.3 Changing the color scheme\nWe can change the default blue color scheme by using continousCS argument as shown in the code chunk below.\n\nparallelPlot(wh,\n             continuousCS = \"YlOrRd\",\n             rotateTitle = TRUE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#parallel-coordinates-plot-with-histogram",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5d.html#parallel-coordinates-plot-with-histogram",
    "title": "Hands-on Exercise 5d: Visual Multivariate Analysis with Parallel Coordinates Plot",
    "section": "3.4 Parallel coordinates plot with histogram",
    "text": "3.4 Parallel coordinates plot with histogram\nIn the code chunk below, histoVisibility argument is used to plot histogram along the axis of each variables.\n\nhistoVisibility &lt;- rep(TRUE, ncol(wh))\nparallelPlot(wh,\n             rotateTitle = TRUE,\n             histoVisibility = histoVisibility)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "",
    "text": "In this exercise, we will use corrplot, ggpubr, plotly and tidyverse in RStudio.\n\nLoading R packageImporting Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(corrplot, ggstatsplot, tidyverse)\n\n\n\nThe code chunk below imports the data into R environment by using read_csv() function of readr package.\n\nwine &lt;- read_csv(\"data/wine_quality.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#building-a-basic-correlation-matrix",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#building-a-basic-correlation-matrix",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "2.1 Building a basic correlation matrix",
    "text": "2.1 Building a basic correlation matrix\nFigure below shows the scatter plot matrix of Wine Quality Data. It is a 11 by 11 matrix.\n\npairs(wine[,1:11])\n\n\n\n\nThe required input of pairs() can be a matrix or data frame. The code chunk used to create the scatterplot matrix is relatively simple. It uses the default pairs function. Columns 2 to 12 of wine dataframe is used to build the scatterplot matrix. The variables are: fixed acidity, volatile acidity, citric acid, residual sugar, chlorides, free sulfur dioxide, total sulfur dioxide, density, pH, sulphates and alcohol.\n\npairs(wine[,2:12])"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#drawing-the-lower-corner",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#drawing-the-lower-corner",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "2.2 Drawing the lower corner",
    "text": "2.2 Drawing the lower corner\nThe upper.panel argument will be used to show the lower half of the correlation matrix.\n\npairs(wine[,2:12], upper.panel = NULL)\n\n\n\n\nThe lower.panel argument will be used to show the upper half of the correlation matrix.\n\npairs(wine[,2:12], lower.panel = NULL)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#including-with-correlation-coefficients",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#including-with-correlation-coefficients",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "2.3 Including with correlation coefficients",
    "text": "2.3 Including with correlation coefficients\npanel.cor function will be used to show the correlation coefficient of each pair of variables instead of a scatter plot.\n\npanel.cor &lt;- function(x, y, digits=2, prefix=\"\", cex.cor, ...) {\nusr &lt;- par(\"usr\")\non.exit(par(usr))\npar(usr = c(0, 1, 0, 1))\nr &lt;- abs(cor(x, y, use=\"complete.obs\"))\ntxt &lt;- format(c(r, 0.123456789), digits=digits)[1]\ntxt &lt;- paste(prefix, txt, sep=\"\")\nif(missing(cex.cor)) cex.cor &lt;- 0.8/strwidth(txt)\ntext(0.5, 0.5, txt, cex = cex.cor * (1 + r) / 2)\n}\n\npairs(wine[,2:12], \n      upper.panel = panel.cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#the-basic-plot",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "3.1 The basic plot",
    "text": "3.1 The basic plot\nOne of the advantage of using ggcorrmat() over many other methods to visualize a correlation matrix is it is ability to provide a comprehensive and yet professional statistical report as shown in the figure below.\n\nggstatsplot::ggcorrmat(\n  data = wine, \n  cor.vars = 1:11)\n\n\n\n\n\nggstatsplot::ggcorrmat(data = wine, \n  cor.vars = 1:11,\n  ggcorrplot.args = list(outline.color = \"black\", \n                         hc.order = TRUE,\n                         tl.cex = 10,\n                         lab_size = 2.5),\n  title    = \"Correlogram for wine dataset\",\n  subtitle = \"Four pairs are no significant at p &lt; 0.05\")\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ncor.vars argument is used to compute the correlation matrix needed to build the corrgram.\nggcorrplot.args argument provide additional (mostly aesthetic) arguments that will be passed to ggcorrplot::ggcorrplot function. The list should avoid any of the following arguments since they are already internally being used: corr, method, p.mat, sig.level, ggtheme, colors, lab, pch, legend.title, digits.\n\n\n\nThe sample sub-code chunk can be used to control specific component of the plot such as the font size of the x-axis, y-axis, and the statistical report.\n\nggplot.component = list(\n    theme(text=element_text(size=5),\n      axis.text.x = element_text(size = 8),\n      axis.text.y = element_text(size = 8)))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#getting-started-with-corrplot",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#getting-started-with-corrplot",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.1 Getting started with corrplot",
    "text": "5.1 Getting started with corrplot\nIn the code chunk below, cor() of R Stats is used to compute the correlation matrix of wine data frame.\n\nwine.cor &lt;- cor(wine[, 1:11])\n\nNext,corrplot() is used to plot the corrgram by using all the default setting as shown in the code chunk below.\n\ncorrplot(wine.cor)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-visual-geometrics",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-visual-geometrics",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.2 Working with visual geometrics",
    "text": "5.2 Working with visual geometrics\nThere are seven visual geometrics geometrics to encode the attribute values which are circle, square, ellipse, number, shade, color and pie. The default is circle. However, this default setting can be changed by using the method argument as shown in the code chunk below.\n\ncorrplot(wine.cor, \n         method = \"square\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-layout",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-layout",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.3 Working with layout",
    "text": "5.3 Working with layout\nThere are three layout types which EW “full”, “upper” and “lower”. The default is “full”. However, this default setting can be changed by using the type argument. Furthermore, arguments diag and tl.col are used to turn off the diagonal cells and to change the axis text label color to black color respectively as shown in below.\n\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         type=\"upper\",\n         diag = FALSE,\n         tl.col = \"black\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-mixed-layout",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#working-with-mixed-layout",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.4 Working with mixed layout",
    "text": "5.4 Working with mixed layout\nThecorrplot.mixed(), a wrapped function for mixed visualization style, uses to create a corrgram with mixed layout.\n\ncorrplot.mixed(wine.cor, \n               lower = \"square\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               tl.col = \"black\",\n               number.cex = 0.7)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#combining-corrgram-with-the-significant-test",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#combining-corrgram-with-the-significant-test",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.5 Combining corrgram with the significant test",
    "text": "5.5 Combining corrgram with the significant test\nIn this section, we will show a corrgram combined with the significant test. The corrgram reveals that not all correlation pairs are statistically significant. For example, the correlation between total sulfur dioxide and free surfur dioxide is statistically significant at significant level of 0.1 but not the pair between total sulfur dioxide and citric acid.\nThe cor.mtest() is used to compute the p-values and confidence interval for each pair of variables. Then,the p.mat argument of corrplot function is used as in the code chunk below.\n\nwine.sig = cor.mtest(wine.cor, conf.level= .95)\n\ncorrplot(wine.cor,\n         method = \"number\",\n         type = \"lower\",\n         diag = FALSE,\n         tl.col = \"black\",\n         tl.srt = 45,\n         p.mat = wine.sig$p,\n         sig.level = .05,\n         number.cex = 0.7)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#reorder-a-corrgram",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#reorder-a-corrgram",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.6 Reorder a corrgram",
    "text": "5.6 Reorder a corrgram\nCurrently, corrplot package support four sorting methods, they are:\n\n“AOE” is for the angular order of the eigenvectors. See Michael Friendly (2002) for details.\n“FPC” for the first principal component order.\n“hclust” for hierarchical clustering order, and “hclust.method” for the agglomeration method to be used.\n\n“hclust.method” should be one of “ward”, “single”, “complete”, “average”, “mcquitty”, “median” or “centroid”.\n\n“alphabet” for alphabetical order.\n\n“AOE”, “FPC”, “hclust”, “alphabet”. More algorithms can be found in seriation package.\n\n\nCode\ncorrplot.mixed(wine.cor, \n               lower = \"ellipse\", \n               upper = \"number\",\n               tl.pos = \"lt\",\n               diag = \"l\",\n               order= \"FPC\",\n               tl.col = \"black\",\n               number.cex = 0.7)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#reordering-a-correlation-matrix-using-hclust",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5b.html#reordering-a-correlation-matrix-using-hclust",
    "title": "Hands-on Exercise 5b: Visual Correlation Analysis",
    "section": "5.7 Reordering a correlation matrix using hclust",
    "text": "5.7 Reordering a correlation matrix using hclust\ncorrplot() can draw rectangles around the corrgram based on the results of hierarchical clustering by using hclust\n\n\nCode\ncorrplot(wine.cor, \n         method = \"ellipse\", \n         tl.pos = \"lt\",\n         tl.col = \"black\",\n         order=\"hclust\",\n         hclust.method = \"ward.D\",\n         addrect = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "",
    "text": "In this exercise, we will use the following our R packages.\n\nreadr for importing csv into R.\nFunnelPlotR for creating funnel plot.\nggplot2 for creating funnel plot manually.\nknitr for building static html table.\nplotly for creating interactive funnel plot.\n\n\nLoading R packageImporting DataSummarizing Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(tidyverse, FunnelPlotR, plotly, knitr) \n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\ncovid19 &lt;- read_csv(\"data/COVID-19_DKI_Jakarta.csv\") %&gt;%\n  mutate_if(is.character, as.factor)\n\n\n\nThe code chunk below uses summary()to summarize the data.\n\nsummary(covid19)\n\n Sub-district ID                     City              District  \n Min.   :3.101e+09   JAKARTA BARAT     :56   TAMBORA       : 11  \n 1st Qu.:3.172e+09   JAKARTA PUSAT     :44   KEBAYORAN BARU: 10  \n Median :3.173e+09   JAKARTA SELATAN   :65   CIPAYUNG      :  8  \n Mean   :3.172e+09   JAKARTA TIMUR     :65   JATINEGARA    :  8  \n 3rd Qu.:3.174e+09   JAKARTA UTARA     :31   KEMAYORAN     :  8  \n Max.   :3.175e+09   KAB.ADM.KEP.SERIBU: 6   SETIA BUDI    :  8  \n                                             (Other)       :214  \n       Sub-district    Positive      Recovered        Death       \n ANCOL       :  1   Min.   :  72   Min.   :  69   Min.   :  0.00  \n ANGKE       :  1   1st Qu.:1644   1st Qu.:1578   1st Qu.: 24.50  \n BALE KAMBANG:  1   Median :2420   Median :2329   Median : 39.00  \n BALI MESTER :  1   Mean   :2572   Mean   :2477   Mean   : 40.99  \n BAMBU APUS  :  1   3rd Qu.:3372   3rd Qu.:3242   3rd Qu.: 55.00  \n BANGKA      :  1   Max.   :6231   Max.   :5970   Max.   :158.00  \n (Other)     :261"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#funnelplotr-methods-the-basic-plot",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#funnelplotr-methods-the-basic-plot",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "2.1 FunnelPlotR methods: The basic plot",
    "text": "2.1 FunnelPlotR methods: The basic plot\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(numerator = covid19$Positive,\n  denominator = covid19$Death,\n  group = covid19$`Sub-district`)\n\n\n\n\nA funnel plot object with 267 points of which 0 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\ngroup in this function is different from the scatterplot. Here, it defines the level of the points to be plotted i.e. Sub-district, District or City. If Cityc is chosen, there are only six data points.\nBy default, data_typeargument is “SR”.\nlimit: Plot limits, accepted values are: 95 or 99, corresponding to 95% or 99.8% quantiles of the distribution."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#makeover-1",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#makeover-1",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "2.2 Makeover 1",
    "text": "2.2 Makeover 1\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",     #&lt;&lt;\n  xrange = c(0, 6500),  #&lt;&lt;\n  yrange = c(0, 0.05)   #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\ndata_type argument is used to change from default “SR” to “PR” (i.e. proportions)\nxrange and yrange are used to set the range of x-axis and y-axis"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#makeover-2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#makeover-2",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "2.3 Makeover 2",
    "text": "2.3 Makeover 2\nThe code chunk below plots a funnel plot.\n\nfunnel_plot(\n  numerator = covid19$Death,\n  denominator = covid19$Positive,\n  group = covid19$`Sub-district`,\n  data_type = \"PR\",   \n  xrange = c(0, 6500),  \n  yrange = c(0, 0.05),\n  label = NA,\n  title = \"Cumulative COVID-19 Fatality Rate by Cumulative Total Number of COVID-19 Positive Cases\", #&lt;&lt;           \n  x_label = \"Cumulative COVID-19 Positive Cases\", #&lt;&lt;\n  y_label = \"Cumulative Fatality Rate\"  #&lt;&lt;\n)\n\n\n\n\nA funnel plot object with 267 points of which 7 are outliers. \nPlot is adjusted for overdispersion. \n\n\n\n\n\n\n\n\nThings to learn from the code above\n\n\n\n\nlabel = NA argument is to removed the default label outliers feature.\ntitle argument is used to add plot title.\nx_label and y_label arguments are used to add/edit x-axis and y-axis titles."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#computing-the-basic-derived-fields",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#computing-the-basic-derived-fields",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "3.1 Computing the basic derived fields",
    "text": "3.1 Computing the basic derived fields\nTo plot the funnel plot from scratch, we need to derive cumulative death rate and standard error of cumulative death rate.\n\ndf &lt;- covid19 %&gt;%\n  mutate(rate = Death / Positive) %&gt;%\n  mutate(rate.se = sqrt((rate*(1-rate)) / (Positive))) %&gt;%\n  filter(rate &gt; 0)\n\nNext, the fit.mean is computed by using the code chunk below.\n\nfit.mean &lt;- weighted.mean(df$rate, 1/df$rate.se^2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#calculate-lower-and-upper-limits-for-95-and-99.9-ci",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "3.2 Calculate lower and upper limits for 95% and 99.9% CI",
    "text": "3.2 Calculate lower and upper limits for 95% and 99.9% CI\nThe code chunk below is used to compute the lower and upper limits for 95% confidence interval.\n\nnumber.seq &lt;- seq(1, max(df$Positive), 1)\nnumber.ll95 &lt;- fit.mean - 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul95 &lt;- fit.mean + 1.96 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ll999 &lt;- fit.mean - 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq)) \nnumber.ul999 &lt;- fit.mean + 3.29 * sqrt((fit.mean*(1-fit.mean)) / (number.seq))\n\ndfCI &lt;- data.frame(number.ll95, number.ul95, number.ll999, \n                   number.ul999, number.seq, fit.mean)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#plotting-a-static-funnel-plot",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#plotting-a-static-funnel-plot",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "3.3 Plotting a static funnel plot",
    "text": "3.3 Plotting a static funnel plot\nIn the code chunk below, ggplot2 functions are used to plot a static funnel plot.\n\n\nCode\np &lt;- ggplot(df, aes(x = Positive, y = rate)) +\n  geom_point(aes(label=`Sub-district`), \n             alpha=0.4) +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul95), \n            size = 0.4, \n            colour = \"grey40\", \n            linetype = \"dashed\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ll999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_line(data = dfCI, \n            aes(x = number.seq, \n                y = number.ul999), \n            size = 0.4, \n            colour = \"grey40\") +\n  geom_hline(data = dfCI, \n             aes(yintercept = fit.mean), \n             size = 0.4, \n             colour = \"grey40\") +\n  coord_cartesian(ylim=c(0,0.05)) +\n  annotate(\"text\", x = 1, y = -0.13, label = \"95%\", size = 3, colour = \"grey40\") + \n  annotate(\"text\", x = 4.5, y = -0.18, label = \"99%\", size = 3, colour = \"grey40\") + \n  ggtitle(\"Cumulative Fatality Rate by Cumulative Number of COVID-19 Cases\") +\n  xlab(\"Cumulative Number of COVID-19 Cases\") + \n  ylab(\"Cumulative Fatality Rate\") +\n  theme_light() +\n  theme(plot.title = element_text(size=12),\n        legend.position = c(0.91,0.85), \n        legend.title = element_text(size=7),\n        legend.text = element_text(size=7),\n        legend.background = element_rect(colour = \"grey60\", linetype = \"dotted\"),\n        legend.key.height = unit(0.3, \"cm\"))\np"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#interactive-funnel-plot-plotly-ggplot2",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4d.html#interactive-funnel-plot-plotly-ggplot2",
    "title": "Hands-on Exercise 4d:Funnel Plots for Fair Comparisons",
    "section": "3.4 Interactive Funnel Plot: plotly + ggplot2",
    "text": "3.4 Interactive Funnel Plot: plotly + ggplot2\nThe funnel plot created using ggplot2 functions can be made interactive with ggplotly() of plotly r package.\n\nfp_ggplotly &lt;- ggplotly(p,\n  tooltip = c(\"label\", \n              \"x\", \n              \"y\"))\nfp_ggplotly"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "",
    "text": "In this section, we will use the following our R packages.\n\ntidyverse, a family of R packages for data science process,\nggstatsplot, a ggplot2 extension created graphics with details from statistical tests included in the information-rich plots themselves.\n\nTo provide alternative statistical inference methods by default.\nTo follow best practices for statistical reporting. For all statistical tests reported in the plots, the default template abides by the APA gold standard for statistical reporting"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#one-sample-test-gghistostats-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#one-sample-test-gghistostats-method",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.1 One-sample test: gghistostats() method",
    "text": "2.1 One-sample test: gghistostats() method\nIn the code chunk below, gghistostats() is used to to build an visual of one-sample test on English scores.\n\nset.seed(1234)\n\ngghistostats(data = exam,\n  x = ENGLISH,\n  type = \"bayes\",\n  test.value = 60,\n  xlab = \"English scores\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#unpacking-the-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#unpacking-the-bayes-factor",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.2 Unpacking the Bayes Factor",
    "text": "2.2 Unpacking the Bayes Factor\n\nA Bayes factor is the ratio of the likelihood of one particular hypothesis to the likelihood of another. It can be interpreted as a measure of the strength of evidence in favor of one theory among two competing theories.\nThat is because the Bayes factor gives us a way to evaluate the data in favor of a null hypothesis, and to use external information to do so. It tells us what the weight of the evidence is in favor of a given hypothesis.\nWhen we are comparing two hypotheses, H1 (the alternate hypothesis) and H0 (the null hypothesis), the Bayes Factor is often written as B10. It can be defined mathematically as\nThe Schwarz criterion is one of the easiest ways to calculate rough approximation of the Bayes Factor."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#how-to-interpret-bayes-factor",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#how-to-interpret-bayes-factor",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.3 How to interpret Bayes Factor",
    "text": "2.3 How to interpret Bayes Factor\nA Bayes Factor can be any positive number. One of the most common interpretations is this one—first proposed by Harold Jeffereys (1961) and slightly modified by Lee and Wagenmakers in 2013."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#two-sample-mean-test-ggbetweenstats",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#two-sample-mean-test-ggbetweenstats",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.4 Two-sample mean test: ggbetweenstats()",
    "text": "2.4 Two-sample mean test: ggbetweenstats()\nIn the code chunk below, ggbetweenstats() is used to build a visual for two-sample mean test of Maths scores by gender.\n\nggbetweenstats(data = exam,\n  x = GENDER, \n  y = MATHS,\n  type = \"np\",\n  messages = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#oneway-anova-test-ggbetweenstats-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#oneway-anova-test-ggbetweenstats-method",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.5 Oneway ANOVA Test: ggbetweenstats() method",
    "text": "2.5 Oneway ANOVA Test: ggbetweenstats() method\nIn the code chunk below, ggbetweenstats() is used to build a visual for One-way ANOVA test on English score by race.\n\nggbetweenstats(data = exam,\n  x = RACE, \n  y = ENGLISH,\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE)\n\n\n\n\n\n“ns” → only non-significant\n“s” → only significant\n“all” → everything"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#significant-test-of-correlation-ggscatterstats",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#significant-test-of-correlation-ggscatterstats",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.6 Significant Test of Correlation: ggscatterstats()",
    "text": "2.6 Significant Test of Correlation: ggscatterstats()\nIn the code chunk below, ggscatterstats() is used to build a visual for Significant Test of Correlation between Maths scores and English scores.\n\nggscatterstats(data = exam,\n  x = MATHS,\n  y = ENGLISH,\n  marginal = FALSE)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#significant-test-of-association-depedence-ggbarstats-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "2.7 Significant Test of Association (Depedence) : ggbarstats() methods",
    "text": "2.7 Significant Test of Association (Depedence) : ggbarstats() methods\nIn the code chunk below, the Maths scores is binned into a 4-class variable by using cut().\n\nexam1 &lt;- exam %&gt;% \n  mutate(MATHS_bins = \n           cut(MATHS, \n               breaks = c(0,60,75,85,100)))\n\nIn this code chunk below ggbarstats() is used to build a visual for Significant Test of Association\n\nggbarstats(exam1, \n           x = MATHS_bins, \n           y = GENDER)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#multiple-regression-model-using-lm",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#multiple-regression-model-using-lm",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.1 Multiple Regression Model using lm()",
    "text": "4.1 Multiple Regression Model using lm()\nThe code chunk below is used to calibrate a multiple linear regression model by using lm() of Base Stats of R.\n\nmodel &lt;- lm(Price ~ Age_08_04 + Mfg_Year + KM + \n              Weight + Guarantee_Period, data = car_resale)\nmodel\n\n\nCall:\nlm(formula = Price ~ Age_08_04 + Mfg_Year + KM + Weight + Guarantee_Period, \n    data = car_resale)\n\nCoefficients:\n     (Intercept)         Age_08_04          Mfg_Year                KM  \n      -2.637e+06        -1.409e+01         1.315e+03        -2.323e-02  \n          Weight  Guarantee_Period  \n       1.903e+01         2.770e+01"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-checking-for-multicolinearity",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-checking-for-multicolinearity",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.2 Model Diagnostic: checking for multicolinearity",
    "text": "4.2 Model Diagnostic: checking for multicolinearity\nIn the code chunk, check_collinearity() of performance package.\n\ncheck_collinearity(model)\n\n# Check for Multicollinearity\n\nLow Correlation\n\n             Term  VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n               KM 1.46 [ 1.37,  1.57]         1.21      0.68     [0.64, 0.73]\n           Weight 1.41 [ 1.32,  1.51]         1.19      0.71     [0.66, 0.76]\n Guarantee_Period 1.04 [ 1.01,  1.17]         1.02      0.97     [0.86, 0.99]\n\nHigh Correlation\n\n      Term   VIF     VIF 95% CI Increased SE Tolerance Tolerance 95% CI\n Age_08_04 31.07 [28.08, 34.38]         5.57      0.03     [0.03, 0.04]\n  Mfg_Year 31.16 [28.16, 34.48]         5.58      0.03     [0.03, 0.04]\n\n\n\ncheck_c &lt;- check_collinearity(model)\nplot(check_c)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-checking-normality-assumption",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-checking-normality-assumption",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.3 Model Diagnostic: checking normality assumption",
    "text": "4.3 Model Diagnostic: checking normality assumption\nIn the code chunk, check_normality() of performance package is used.\n\nmodel1 &lt;- lm(Price ~ Age_08_04 + KM + \n              Weight + Guarantee_Period, data = car_resale)\n\ncheck_n &lt;- check_normality(model1)\n\nplot(check_n, type =\"qq\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-check-model-for-homogeneity-of-variances",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.4 Model Diagnostic: Check model for homogeneity of variances",
    "text": "4.4 Model Diagnostic: Check model for homogeneity of variances\nIn the code chunk, check_heteroscedasticity() of performance package is used.\n\ncheck_h &lt;- check_heteroscedasticity(model1)\n\nplot(check_h)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-complete-check",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#model-diagnostic-complete-check",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.5 Model Diagnostic: Complete check",
    "text": "4.5 Model Diagnostic: Complete check\nWe can also perform the complete by using check_model().\n\ncheck_model(model1)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualising-regression-parameters-see-methods",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualising-regression-parameters-see-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.6 Visualising Regression Parameters: see methods",
    "text": "4.6 Visualising Regression Parameters: see methods\nIn the code chunk, plot() of see package and parameters() of parameters package is used to visualize the parameters of a regression model.\n\nplot(parameters(model1))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualizing-regression-parameters-ggcoefstats-methods",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4b.html#visualizing-regression-parameters-ggcoefstats-methods",
    "title": "Hands-on Exercise 4b: Visual Statistical Analysis",
    "section": "4.7 Visualizing Regression Parameters: ggcoefstats() methods",
    "text": "4.7 Visualizing Regression Parameters: ggcoefstats() methods\nIn the code chunk, ggcoefstats() of ggstatsplot package is used to visualize the parameters of a regression model.\n\nggcoefstats(model1, \n            output = \"plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "",
    "text": "In this exercise, we will use the following our R packages.\n\ntidyverse, a family of R packages for data science process,\nggridges, a ggplot2 extension specially designed for plotting ridgeline plots, and\nggdist for visualizing distribution and uncertainty.\n\n\nLoading R packageImporting DataSummarizing Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(ggdist, ggridges, ggthemes,\n               colorspace, tidyverse) \n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam &lt;- read.csv(\"data/Exam_data.csv\")\n\n\n\nThe code chunk below uses summary()to summarize the data.\n\nsummary(exam)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#plotting-ridgeline-graph-ggridges-method",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#plotting-ridgeline-graph-ggridges-method",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "2.1 Plotting ridgeline graph: ggridges method",
    "text": "2.1 Plotting ridgeline graph: ggridges method\nIn this section, we will plot ridgeline plot by using ggridges package.\nThere two main geom to plot ridgeline plots:\n\ngeom_ridgeline(), and\ngeom_density_ridges().\n\nThe below plot is using geom_density_ridges()\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS)) +\n  geom_density_ridges(\n    scale = 3,\n    rel_min_height = 0.01,\n    bandwidth = 3.4,\n    fill = lighten(\"pink\", .5),\n    color = \"black\"\n  ) +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n    ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#varying-fill-colors-along-the-x-axis",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#varying-fill-colors-along-the-x-axis",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "2.2 Varying fill colors along the x axis",
    "text": "2.2 Varying fill colors along the x axis\nSometimes we would like to have the area under a ridgeline filled with colors that vary in some form along the x axis. This can be done using either geom_ridgeline_gradient() or geom_density_ridges_gradient(). Both geoms work like geom_ridgeline() and geom_density_ridges(), except that they allow for varying fill colors. However, they do not allow for alpha transparency in the fill.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = ENGLISH, \n           y = CLASS,\n           fill = stat(x))) +\n  geom_density_ridges_gradient(\n    scale = 3,\n    rel_min_height = 0.01) +\n  scale_fill_viridis_c(name = \"Temp. [F]\",\n                       option = \"F\") +\n  scale_x_continuous(\n    name = \"English grades\",\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(name = NULL, expand = expansion(add = c(0.2, 2.6))) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#mapping-the-probabilities-directly-onto-color",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#mapping-the-probabilities-directly-onto-color",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "2.3 Mapping the probabilities directly onto color",
    "text": "2.3 Mapping the probabilities directly onto color\ngridges package also provides a stat function called stat_density_ridges() that replaces stat_density() of ggplot2.\nThe below figure is plotted by mapping the probabilities calculated by using stat(ecdf) which represent the empirical cumulative density function for the distribution of English score.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = 0.5 - abs(0.5-stat(ecdf)))) +\n  stat_density_ridges(geom = \"density_ridges_gradient\", \n                      calc_ecdf = TRUE) +\n  scale_fill_viridis_c(name = \"Tail probability\",\n                       direction = 1) +\n  theme_ridges()\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nIt is important include the argument calc_ecdf = TRUE in stat_density_ridges()."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#ridgeline-plots-with-quantile-lines",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#ridgeline-plots-with-quantile-lines",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "2.4 Ridgeline plots with quantile lines",
    "text": "2.4 Ridgeline plots with quantile lines\nBy using geom_density_ridges_gradient(), we can color the ridgeline plot by quantile, via the calculated stat(quantile) aesthetic as shown in the figure below.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = 4,\n    quantile_lines = TRUE) +\n  scale_fill_viridis_d(name = \"Quartiles\") +\n  theme_ridges()\n\n\n\n\nInstead of using number to define the quantiles, we can also specify quantiles by cut points such as 2.5% and 97.5% tails to colour the ridgeline plot as shown in the figure below.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam,\n       aes(x = ENGLISH, \n           y = CLASS, \n           fill = factor(stat(quantile))\n           )) +\n  stat_density_ridges(\n    geom = \"density_ridges_gradient\",\n    calc_ecdf = TRUE, \n    quantiles = c(0.025, 0.975)\n    ) +\n  scale_fill_manual(\n    name = \"Probability\",\n    values = c(\"red\", \"#A0A0A0A0\", \"purple\"),\n    labels = c(\"(0, 0.025]\", \"(0.025, 0.975]\", \"(0.975, 1]\")\n  ) +\n  theme_ridges()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#plotting-a-half-eye-graph",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#plotting-a-half-eye-graph",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.1 Plotting a Half Eye graph",
    "text": "3.1 Plotting a Half Eye graph\nWe will plot a Half-Eye graph by using stat_halfeye() of ggdist package.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_color = NA,\n               fill = \"lightblue\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\nWe remove the slab interval by setting .width = 0 and point_color = NA."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#adding-the-boxplot-with-geom_boxplot",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#adding-the-boxplot-with-geom_boxplot",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.2 Adding the boxplot with geom_boxplot()",
    "text": "3.2 Adding the boxplot with geom_boxplot()\nTo add the second geometry layer, we will use geom_boxplot() of ggplot2. This produces a narrow boxplot. We reduce the width and adjust the opacity.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .20,\n               outlier.shape = NA)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#adding-the-dot-plots-with-stat_dots",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#adding-the-dot-plots-with-stat_dots",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.3 Adding the Dot Plots with stat_dots()",
    "text": "3.3 Adding the Dot Plots with stat_dots()\nTo add the third geometry layer, we will use stat_dots() of ggdist package. This produces a half-dotplot, which is similar to a histogram that indicates the number of samples (number of dots) in each bin. We select side = “left” to indicate we want it on the left-hand side.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4a.html#finishing-touch",
    "title": "Hands-on Exercise 4a: Visualising Distribution",
    "section": "3.4 Finishing touch",
    "text": "3.4 Finishing touch\ncoord_flip() of ggplot2 package will be used to flip the raincloud chart horizontally to give it the raincloud appearance. At the same time, theme_economist_white() of ggthemes package is used to give the raincloud chart a professional publishing standard look.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(exam, \n       aes(x = RACE, \n           y = ENGLISH)) +\n  stat_halfeye(adjust = 0.5,\n               justification = -0.2,\n               .width = 0,\n               point_colour = NA,\n               fill = \"lightblue\") +\n  geom_boxplot(width = .20,\n               outlier.shape = NA) +\n  stat_dots(side = \"left\", \n            justification = 1.2, \n            binwidth = .5,\n            dotsize = 2) +\n  coord_flip() +\n  theme_economist_white()"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html",
    "title": "Hands-on Exercise 4c: Visualizing Uncertainty",
    "section": "",
    "text": "In this exercise, we will use the following our R packages.\n\ntidyverse, a family of R packages for data science process,\nplotly for creating interactive plot,\ngganimate for creating animation plot,\nDT for displaying interactive html table,\ncrosstalk for for implementing cross-widget interactions (currently, linked brushing and filtering), and\nggdist for visualising distribution and uncertainty.\n\n\nLoading R packageImporting DataSummarizing Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\ndevtools::install_github(\"wilkelab/ungeviz\")\n\n\npacman::p_load(ungeviz, plotly, crosstalk,\n               DT, ggdist, ggridges,\n               colorspace, gganimate, tidyverse)\n\n\n\nThe code chunk below imports exam_data.csv into R environment by using read_csv() function of readr package.\n\nexam &lt;- read.csv(\"data/Exam_data.csv\")\n\n\n\nThe code chunk below uses summary()to summarize the data.\n\nsummary(exam)\n\n      ID               CLASS              GENDER              RACE          \n Length:322         Length:322         Length:322         Length:322        \n Class :character   Class :character   Class :character   Class :character  \n Mode  :character   Mode  :character   Mode  :character   Mode  :character  \n                                                                            \n                                                                            \n                                                                            \n    ENGLISH          MATHS          SCIENCE     \n Min.   :21.00   Min.   : 9.00   Min.   :15.00  \n 1st Qu.:59.00   1st Qu.:58.00   1st Qu.:49.25  \n Median :70.00   Median :74.00   Median :65.00  \n Mean   :67.18   Mean   :69.33   Mean   :61.16  \n 3rd Qu.:78.00   3rd Qu.:85.00   3rd Qu.:74.75  \n Max.   :96.00   Max.   :99.00   Max.   :96.00"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#plotting-standard-error-bars-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#plotting-standard-error-bars-of-point-estimates",
    "title": "Hands-on Exercise 4c: Visualizing Uncertainty",
    "section": "2.1 Plotting standard error bars of point estimates",
    "text": "2.1 Plotting standard error bars of point estimates\nThe below plot shows the standard error bars of mean maths score by race.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=RACE, \n        ymin=mean-se, \n        ymax=mean+se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  ggtitle(\"Standard error of mean maths score by race\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe error bars are computed by using the formula mean+/-se.\nFor geom_point(), it is important to indicate stat=“identity”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#plotting-confidence-interval-of-point-estimates",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#plotting-confidence-interval-of-point-estimates",
    "title": "Hands-on Exercise 4c: Visualizing Uncertainty",
    "section": "2.2 Plotting confidence interval of point estimates",
    "text": "2.2 Plotting confidence interval of point estimates\nThe below plot shows the confidence intervals of mean maths score by race.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\nggplot(my_sum) +\n  geom_errorbar(\n    aes(x=reorder(RACE, -mean), \n        ymin=mean-1.96*se, \n        ymax=mean+1.96*se), \n    width=0.2, \n    colour=\"black\", \n    alpha=0.9, \n    size=0.5) +\n  geom_point(aes\n           (x=RACE, \n            y=mean), \n           stat=\"identity\", \n           color=\"red\",\n           size = 1.5,\n           alpha=1) +\n  labs(x = \"Maths score\",\n       title = \"95% confidence interval of mean maths score by race\")\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\nThe confidence intervals are computed by using the formula mean+/-1.96*se.\nThe error bars is sorted by using the average maths scores.\nlabs() argument of ggplot2 is used to change the x-axis label."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualizing-the-uncertainty-of-point-estimates-with-interactive-error-bars",
    "title": "Hands-on Exercise 4c: Visualizing Uncertainty",
    "section": "2.3 Visualizing the uncertainty of point estimates with interactive error bars",
    "text": "2.3 Visualizing the uncertainty of point estimates with interactive error bars\nIn this section, we will show how to plot interactive error bars for the 99% confidence interval of mean maths score by race as shown in the figure below.\n\nPlotCode chunk\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nshared_df = SharedData$new(my_sum)\n\nbscols(widths = c(4,8),\n       ggplotly((ggplot(shared_df) +\n                   geom_errorbar(aes(\n                     x=reorder(RACE, -mean),\n                     ymin=mean-2.58*se, \n                     ymax=mean+2.58*se), \n                     width=0.2, \n                     colour=\"black\", \n                     alpha=0.9, \n                     size=0.5) +\n                   geom_point(aes(\n                     x=RACE, \n                     y=mean, \n                     text = paste(\"Race:\", `RACE`, \n                                  \"&lt;br&gt;N:\", `n`,\n                                  \"&lt;br&gt;Avg. Scores:\", round(mean, digits = 2),\n                                  \"&lt;br&gt;95% CI:[\", \n                                  round((mean-2.58*se), digits = 2), \",\",\n                                  round((mean+2.58*se), digits = 2),\"]\")),\n                     stat=\"identity\", \n                     color=\"red\", \n                     size = 1.5, \n                     alpha=1) + \n                   xlab(\"Race\") + \n                   ylab(\"Average Scores\") + \n                   theme_minimal() + \n                   theme(axis.text.x = element_text(\n                     angle = 45, vjust = 0.5, hjust=1)) +\n                   ggtitle(\"99% Confidence interval of average /&lt;br&gt;maths scores by race\")), \n                tooltip = \"text\"), \n       DT::datatable(shared_df, \n                     rownames = FALSE, \n                     class=\"compact\", \n                     width=\"100%\", \n                     options = list(pageLength = 10,\n                                    scrollX=T), \n                     colnames = c(\"No. of pupils\", \n                                  \"Avg Scores\",\n                                  \"Std Dev\",\n                                  \"Std Error\")) %&gt;%\n         formatRound(columns=c('mean', 'sd', 'se'),\n                     digits=2))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "href": "Hands-on_Ex/Hands-on_Ex4/Hands-on_Ex4c.html#visualizing-the-uncertainty-of-point-estimates-ggdist-methods",
    "title": "Hands-on Exercise 4c: Visualizing Uncertainty",
    "section": "3.1 Visualizing the uncertainty of point estimates: ggdist methods",
    "text": "3.1 Visualizing the uncertainty of point estimates: ggdist methods\nIn the code chunk below, stat_pointinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_pointinterval(.width = 0.95,\n                     .point = median,\n                     .interval = qi) +\n  labs(title = \"Visualizing confidence intervals of mean math score\",\n    subtitle = \"Mean Point + Multiple-interval plot\")\n\n\n\n\n\nIn the code chunk below, stat_gradientinterval() of ggdist is used to build a visual for displaying distribution of maths scores by race.\n\n\nCode\nexam %&gt;%\n  ggplot(aes(x = RACE, \n             y = MATHS)) +\n  stat_gradientinterval(   \n    fill = \"skyblue\",      \n    show.legend = TRUE     \n  ) +                        \n  labs(\n    title = \"Visualizing confidence intervals of mean math score\",\n    subtitle = \"Gradient + interval plot\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5a.html",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5a.html",
    "title": "Hands-on Exercise 5a: Creating Ternary Plot with R",
    "section": "",
    "text": "In this exercise, we will use the following our R packages.\n\nggtern: a ggplot extension specially designed to plot ternary diagrams. The package will be used to plot static ternary plots.\nPlotly R, R library for plotting interactive statistical graphs via plotly’s JavaScript graphing library, plotly.js. The plotly R libary contains the ggplotly function, which will convert ggplot2 figures into a Plotly object.\ntidyverse, a family of modern R packages specially designed to support data science, analysis and communication task.\n\n\nLoading R packageImporting DataPreparing Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(plotly, ggtern, tidyverse)\n\n\n\nThe code chunk below imports respopagsex2000to2018_tidy.csv into R environment by using read_csv() function of readr package.\n\npop_data &lt;- read_csv(\"data/respopagsex2000to2018_tidy.csv\") \n\n\n\nNext, use the mutate() function of dplyr package to derive three new measures, namely: young, active, and old.\n\n#Deriving the young, economy active and old measures\nagpop_mutated &lt;- pop_data %&gt;%\n  mutate(`Year` = as.character(Year))%&gt;%\n  spread(AG, Population) %&gt;%\n  mutate(YOUNG = rowSums(.[4:8]))%&gt;%\n  mutate(ACTIVE = rowSums(.[9:16]))  %&gt;%\n  mutate(OLD = rowSums(.[17:21])) %&gt;%\n  mutate(TOTAL = rowSums(.[22:24])) %&gt;%\n  filter(Year == 2018)%&gt;%\n  filter(TOTAL &gt; 0)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5a.html#plotting-an-interative-ternary-diagram",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5a.html#plotting-an-interative-ternary-diagram",
    "title": "Hands-on Exercise 5a: Creating Ternary Plot with R",
    "section": "2.2 Plotting an interative ternary diagram",
    "text": "2.2 Plotting an interative ternary diagram\nThe code below create an interactive ternary plot using plot_ly() function of Plotly R.\n\n# reusable function for creating annotation object\nlabel &lt;- function(txt) {\n  list(\n    text = txt, \n    x = 0.1, y = 1,\n    ax = 0, ay = 0,\n    xref = \"paper\", yref = \"paper\", \n    align = \"center\",\n    font = list(family = \"serif\", size = 15, color = \"black\"),\n    bgcolor = \"#b3b3b3\", bordercolor = \"black\", borderwidth = 2\n  )\n}\n\n# reusable function for axis formatting\naxis &lt;- function(txt) {\n  list(\n    title = txt, tickformat = \".0%\", tickfont = list(size = 10)\n  )\n}\n\nternaryAxes &lt;- list(\n  aaxis = axis(\"Young\"), \n  baxis = axis(\"Active\"), \n  caxis = axis(\"Old\")\n)\n\n# Initiating a plotly visualization \nplot_ly(\n  agpop_mutated, \n  a = ~YOUNG, \n  b = ~ACTIVE, \n  c = ~OLD, \n  color = I(\"red\"), \n  type = \"scatterternary\"\n) %&gt;%\n  layout(\n    annotations = label(\"Ternary Markers\"), \n    ternary = ternaryAxes\n  )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "",
    "text": "In this exercise, we will use seriation, heatmaply, dendextend and tidyverse in RStudio.\n\nLoading R packageImporting DataPreparing DataTransforming Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(seriation, dendextend, heatmaply, tidyverse)\n\n\n\nThe code chunk below imports the data into R environment by using read_csv() function of readr package.\n\nwh &lt;- read_csv(\"data/WHData-2018.csv\")\n\n\n\nWe need to change the rows by country name instead of row number by using the code chunk below\n\nrow.names(wh) &lt;- wh$Country\n\n\n\nThe code chunk below will be used to transform wh data frame into a data matrix.\n\nwh1 &lt;- dplyr::select(wh, c(3, 7:12))\nwh_matrix &lt;- data.matrix(wh)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#heatmap-of-r-stats",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#heatmap-of-r-stats",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "2.1 heatmap() of R Stats",
    "text": "2.1 heatmap() of R Stats\nWe will plot a heatmap by using heatmap() of Base Stats. The code chunk is given below.\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      Rowv=NA, Colv=NA)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nBy default, heatmap() plots a cluster heatmap. The arguments Rowv=NA and Colv=NA are used to switch off the option of plotting the row and column dendrograms.\n\n\n\nTo plot a cluster heatmap, we just have to use the default as shown in the code chunk below.\n\nwh_heatmap &lt;- heatmap(wh_matrix)\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nThe order of both rows and columns is different compare to the native wh_matrix. This is because heatmap do a reordering using clusterisation: it calculates the distance between each pair of rows and columns and try to order them by similarity. Moreover, the corresponding dendrogram are provided beside the heatmap.\n\n\n\nThe code chunk below normalizes the matrix column-wise.\n\nwh_heatmap &lt;- heatmap(wh_matrix,\n                      scale=\"column\",\n                      cexRow = 0.6, \n                      cexCol = 0.8,\n                      margins = c(10, 4))\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nNotice that the values are scaled now. Also note that margins argument is used to ensure that the entire x-axis labels are displayed completely and, cexRow and cexCol arguments are used to define the font size used for y-axis and x-axis labels respectively."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#working-with-heatmaply",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#working-with-heatmaply",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.1 Working with heatmaply",
    "text": "3.1 Working with heatmaply\n\nheatmaply(mtcars)\n\n\n\n\n\nThe code chunk below shows the basic syntax needed to create n interactive heatmap by using heatmaply package.\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          cexRow = 0.4,\n          cexCol = 0.8,\n          margins = c(10, 10))\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\n\nDifferent from heatmap(), for heatmaply() the default horizontal dendrogram is placed on the left hand side of the heatmap.\nThe text label of each raw, on the other hand, is placed on the right hand side of the heat map.\nWhen the x-axis marker labels are too long, they will be rotated by 135 degree from the north."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#data-trasformation",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#data-trasformation",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.2 Data trasformation",
    "text": "3.2 Data trasformation\nThere are three main data transformation methods supported by heatmaply() which are scale, normalize and percentilse.\n\n3.2.1 Scaling method\nThe code chunk below is used to scale variable values columewise.\n\nheatmaply(wh_matrix[, -c(1, 2, 4, 5)],\n          scale = \"column\")\n\n\n\n\n\n\n\n3.2.2 Normalizing method\nDifferent from Scaling, the normalize method is performed on the input data set i.e. wh_matrix as shown in the code chunk below.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]))\n\n\n\n\n\n\n\n3.2.3 Percentizing method\nSimilar to Normalize method, the Percentize method is also performed on the input data set i.e. wh_matrix as shown in the code chunk below.\n\nheatmaply(percentize(wh_matrix[, -c(1, 2, 4, 5)]))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#clustering-algorithm",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#clustering-algorithm",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.3 Clustering algorithm",
    "text": "3.3 Clustering algorithm\nheatmaply supports a variety of hierarchical clustering algorithm. The main arguments provided are:\n\ndistfun: function used to compute the distance (dissimilarity) between both rows and columns. Defaults to dist. The options “pearson”, “spearman” and “kendall” can be used to use correlation-based clustering, which uses as.dist(1 - cor(t(x))) as the distance metric (using the specified correlation method).\nhclustfun: function used to compute the hierarchical clustering when Rowv or Colv are not dendrograms. Defaults to hclust.\ndist_method default is NULL, which results in “euclidean” to be used. It can accept alternative character strings indicating the method to be passed to distfun. By default distfun is “dist”” hence this can be one of “euclidean”, “maximum”, “manhattan”, “canberra”, “binary” or “minkowski”.\nhclust_method default is NULL, which results in “complete” method to be used. It can accept alternative character strings indicating the method to be passed to hclustfun. By default hclustfun is hclust hence this can be one of “ward.D”, “ward.D2”, “single”, “complete”, “average” (= UPGMA), “mcquitty” (= WPGMA), “median” (= WPGMC) or “centroid” (= UPGMC)."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#manual-approach",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#manual-approach",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.4 Manual approach",
    "text": "3.4 Manual approach\nIn the code chunk below, the heatmap is plotted by using hierachical clustering algorithm with “Euclidean distance” and “ward.D” method\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"ward.D\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#statistical-approach",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#statistical-approach",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.5 Statistical approach",
    "text": "3.5 Statistical approach\nIn order to determine the best clustering method and number of cluster the dend_expend() and find_k() functions of dendextend package will be used.\nFirst, the dend_expend() will be used to determine the recommended clustering method to be used.\n\nwh_d &lt;- dist(normalize(wh_matrix[, -c(1, 2, 4, 5)]), method = \"euclidean\")\ndend_expend(wh_d)[[3]]\n\n  dist_methods hclust_methods     optim\n1      unknown         ward.D 0.6137851\n2      unknown        ward.D2 0.6289186\n3      unknown         single 0.4774362\n4      unknown       complete 0.6434009\n5      unknown        average 0.6701688\n6      unknown       mcquitty 0.5020102\n7      unknown         median 0.5901833\n8      unknown       centroid 0.6338734\n\n\nThe output table shows that “average” method should be used because it gave the high optimum value.\nNext, find_k() is used to determine the optimal number of cluster.\n\nwh_clust &lt;- hclust(wh_d, method = \"average\")\nnum_k &lt;- find_k(wh_clust)\nplot(num_k)\n\n\n\n\nWith reference to the statistical analysis results, we can prepare the code chunk as shown below\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          dist_method = \"euclidean\",\n          hclust_method = \"average\",\n          k_row = 3)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#seriation",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#seriation",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.6 Seriation",
    "text": "3.6 Seriation\nheatmaply uses the seriation package to find an optimal ordering of rows and columns. Optimal means to optimize the Hamiltonian path length that is restricted by the dendrogram structure.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"OLO\")\n\n\n\n\n\nThe default options is “OLO” (Optimal leaf ordering) which optimizes the above criterion (in O(n^4)). Another option is “GW” (Gruvaeus and Wainer) which aims for the same goal but uses a potentially faster heuristic.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"GW\")\n\n\n\n\n\nThe option “mean” gives the output we would get by default from heatmap functions in other packages such as gplots::heatmap.2.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"mean\")\n\n\n\n\n\nThe option “none” gives us the dendrograms without any rotation that is based on the data matrix.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#working-with-colour-palettes",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#working-with-colour-palettes",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.7 Working with colour palettes",
    "text": "3.7 Working with colour palettes\nThe default colour palette uses by heatmaply is viridis. heatmaply users, however, can use other colour palettes in order to improve the aestheticness and visual friendliness of the heatmap.\nIn the code chunk below, the Reds color palette of rColorBrewer is used.\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          seriate = \"none\",\n          colors = Reds)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#the-finishing-touch",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5c.html#the-finishing-touch",
    "title": "Hands-on Exercise 5c: Heatmap for Visualising and Analysing Multivariate Data",
    "section": "3.8 The finishing touch",
    "text": "3.8 The finishing touch\nIn the code chunk below the following arguments are used:\n\nk_row is used to produce 5 groups.\nmargins is used to change the top margin to 60 and row margin to 200.\nfontsizw_row and fontsize_col are used to change the font size for row and column labels to 4.\nmain is used to write the main title of the plot.\nxlab and ylab are used to write the x-axis and y-axis labels respectively.\n\n\nheatmaply(normalize(wh_matrix[, -c(1, 2, 4, 5)]),\n          Colv=NA,\n          seriate = \"none\",\n          colors = Reds,\n          k_row = 5,\n          margins = c(NA,200,60,NA),\n          fontsize_row = 4,\n          fontsize_col = 5,\n          main=\"World Happiness Score and Variables by Country, 2018 \\nDataTransformation using Normalise Method\",\n          xlab = \"World Happiness Indicators\",\n          ylab = \"World Countries\"\n          )"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "",
    "text": "In this exercise, we will use treemap and tidyverse in RStudio.\n\nLoading R packageImporting DataPreparing Data\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(treemap, treemapify, tidyverse) \n\n\n\nThe code chunk below imports the data into R environment by using read_csv() function of readr package.\n\nrealis2018 &lt;- read_csv(\"data/realis2018.csv\")\n\n\n\nWe need to manipulate and prepare a data.frame that is appropriate for treemap visualization:\n\ngroup transaction records by Project Name, Planning Region, Planning Area, Property Type and Type of Sale, and\ncompute Total Unit Sold, Total Area, Median Unit Price and Median Transacted Price by applying appropriate summary statistics on No. of Units, Area (sqm), Unit Price ($ psm) and Transacted Price ($) respectively.\n\nTwo key verbs of dplyr package, namely: group_by() and summarize() will be used to perform these steps.\ngroup_by() breaks down a data.frame into specified groups of rows. When you then apply the verbs above on the resulting object they’ll be automatically applied “by group”.\n\ngrouped select() is the same as ungrouped select(), except that grouping variables are always retained.\ngrouped arrange() is the same as ungrouped; unless you set .by_group = TRUE, in which case it orders first by the grouping variables.\nmutate() and filter() are most useful in conjunction with window functions (like rank(), or min(x) == x). They are described in detail in vignette(“window-functions”).\nsample_n() and sample_frac() sample the specified number/fraction of rows in each group.\nsummarise() computes the summary for each group.\n\n\n\nThe code chunk below shows a typical two lines code approach to perform the steps\n\nrealis2018_grouped &lt;- group_by(realis2018, `Project Name`,\n                               `Planning Region`, `Planning Area`, \n                               `Property Type`, `Type of Sale`)\nrealis2018_summarised &lt;- summarise(realis2018_grouped, \n                          `Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE),\n                          `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n                          `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE), \n                          `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))\n\n\n\n\n\n\n\nNote\n\n\n\n\nAggregation functions such as sum() and meadian() obey the usual rule of missing values: if there’s any missing value in the input, the output will be a missing value. The argument na.rm = TRUE removes the missing values prior to computation\n\n\n\n\n\n\nThe code chunk below shows a more efficient way to tackle the same processes by using the pipe, %&gt;%:\n\nrealis2018_summarised &lt;- realis2018 %&gt;% \n  group_by(`Project Name`,`Planning Region`, \n           `Planning Area`, `Property Type`, \n           `Type of Sale`) %&gt;%\n  summarise(`Total Unit Sold` = sum(`No. of Units`, na.rm = TRUE), \n            `Total Area` = sum(`Area (sqm)`, na.rm = TRUE),\n            `Median Unit Price ($ psm)` = median(`Unit Price ($ psm)`, na.rm = TRUE),\n            `Median Transacted Price` = median(`Transacted Price ($)`, na.rm = TRUE))"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-a-static-treemap",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-a-static-treemap",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.1 Designing a static treemap",
    "text": "2.1 Designing a static treemap\nIn this section, treemap() of Treemap package is used to plot a treemap showing the distribution of median unit prices and total unit sold of resale condominium by geographic hierarchy in 2017.\nFirst, we will select records belongs to resale condominium property type from realis2018_selected data frame.\n\nrealis2018_selected &lt;- realis2018_summarised %&gt;%\n  filter(`Property Type` == \"Condominium\", `Type of Sale` == \"Resale\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#using-the-basic-arguments",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#using-the-basic-arguments",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.2 Using the basic arguments",
    "text": "2.2 Using the basic arguments\nThe code chunk below designed a treemap by using three core arguments of treemap(), namely: index, vSize and vColor.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\")\n\n\n\n\n\n\n\n\n\n\nThings to learn from the three arguments used\n\n\n\n\nindex\n\nThe index vector must consist of at least two column names or else no hierarchy treemap will be plotted.\nIf multiple column names are provided, such as the code chunk above, the first name is the highest aggregation level, the second name the second highest aggregation level, and so on.\n\nvSize\n\nThe column must not contain negative values. This is because it’s vaues will be used to map the sizes of the rectangles of the treemaps.\n\n\n\n\n\n\n\n\n\n\nWarning\n\n\n\nThe treemap above was wrongly coloured. For a correctly designed treemap, the colours of the rectagles should be in different intensity showing, in our case, median unit prices.\nFor treemap(), vColor is used in combination with the argument type to determines the colours of the rectangles. Without defining type, like the code chunk above, treemap() assumes type = index, in our case, the hierarchy of planning areas."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#working-with-vcolor-and-type-arguments",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#working-with-vcolor-and-type-arguments",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.3 Working with vColor and type arguments",
    "text": "2.3 Working with vColor and type arguments\nIn the code chunk below, type argument is define as value.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type = \"value\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThinking to learn from the code chunk above\n\n\n\n\nThe rectangles are colored with different intensity of green, reflecting their respective median unit prices.\nThe legend reveals that the values are binned into ten bins, i.e. 0-5000, 5000-10000, etc. with an equal interval of 5000."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#the-value-type-treemap",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#the-value-type-treemap",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.4 The “value” type treemap",
    "text": "2.4 The “value” type treemap\nThe code chunk below shows a value type treemap.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThing to learn from the code chunk above\n\n\n\n\nalthough the colour palette used is RdYlBu but there are no red rectangles in the treemap above. This is because all the median unit prices are positive.\nThe reason why we see only 5000 to 45000 in the legend is because the range argument is by default c(min(values, max(values)) with some pretty rounding."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#the-manual-type-treemap",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#the-manual-type-treemap",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.5 The “manual” type treemap",
    "text": "2.5 The “manual” type treemap\nThe “manual” type does not interpret the values as the “value” type does. Instead, the value range is mapped linearly to the colour palette.\nThe code chunk below shows a manual type treemap.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"RdYlBu\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\"\n        )\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above:\n\n\n\n\nThe color scheme used is very confusing. This is because mapping = (min(values), mean(range(values)), max(values)). It is not wise to use diverging color palette such as RdYlBu if the values are all positive or negative\n\n\n\nTo solve this issue, a single color palette such as Blues should be used.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#working-with-algorithm-argument",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#working-with-algorithm-argument",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.6 Working with algorithm argument",
    "text": "2.6 Working with algorithm argument\nThe code chunk below plots a squarified treemap by changing the algorithm argument.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"squarified\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#using-sortid",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#using-sortid",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "2.7 Using sortID",
    "text": "2.7 Using sortID\nWhen “pivotSize” algorithm is used, sortID argument can be used to dertemine the order in which the rectangles are placed from top left to bottom right.\n\ntreemap(realis2018_selected,\n        index=c(\"Planning Region\", \"Planning Area\", \"Project Name\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"manual\",\n        palette=\"Blues\", \n        algorithm = \"pivotSize\",\n        sortID = \"Median Transacted Price\",\n        title=\"Resale Condominium by Planning Region and Area, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-a-basic-treemap",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-a-basic-treemap",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "3.1 Designing a basic treemap",
    "text": "3.1 Designing a basic treemap\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`),\n       layout = \"scol\",\n       start = \"bottomleft\") + \n  geom_treemap() +\n  scale_fill_gradient(low = \"light blue\", high = \"blue\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#defining-hierarchy",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#defining-hierarchy",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "3.2 Defining hierarchy",
    "text": "3.2 Defining hierarchy\nBelow code chunk is to group by Planning Region\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`),\n       start = \"topleft\") + \n  geom_treemap()\n\n\n\n\nBelow code chunk is to group by Planning Area\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap()\n\n\n\n\nAdding boundary line\n\nggplot(data=realis2018_selected, \n       aes(area = `Total Unit Sold`,\n           fill = `Median Unit Price ($ psm)`,\n           subgroup = `Planning Region`,\n           subgroup2 = `Planning Area`)) + \n  geom_treemap() +\n  geom_treemap_subgroup2_border(colour = \"gray40\",\n                                size = 2) +\n  geom_treemap_subgroup_border(colour = \"gray20\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#installing-d3treer-package",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#installing-d3treer-package",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "4.1 Installing d3treeR package",
    "text": "4.1 Installing d3treeR package\n\ninstall.packages(\"devtools\")\n\n\nlibrary(devtools)\ninstall_github(\"timelyportfolio/d3treeR\",force = TRUE)\n\nxfun   (0.41    -&gt; 0.42 ) [CRAN]\nigraph (2.0.1.1 -&gt; 2.0.2) [CRAN]\npackage 'xfun' successfully unpacked and MD5 sums checked\npackage 'igraph' successfully unpacked and MD5 sums checked\n\nThe downloaded binary packages are in\n    C:\\Users\\kbuat\\AppData\\Local\\Temp\\RtmpEJDK1x\\downloaded_packages\n── R CMD build ─────────────────────────────────────────────────────────────────\n* checking for file 'C:\\Users\\kbuat\\AppData\\Local\\Temp\\RtmpEJDK1x\\remotes83dc94e5b5d\\d3treeR-d3treeR-ebb833d/DESCRIPTION' ... OK\n* preparing 'd3treeR':\n* checking DESCRIPTION meta-information ... OK\n* checking for LF line-endings in source and make files and shell scripts\n* checking for empty or unneeded directories\nOmitted 'LazyData' from DESCRIPTION\n* building 'd3treeR_0.1.tar.gz'\n\n\n\n\nlibrary(d3treeR)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-an-interactive-treemap",
    "href": "Hands-on_Ex/Hands-on_Ex5/Hands-on_Ex5e.html#designing-an-interactive-treemap",
    "title": "Hands-on Exercise 5e: Treemap Visualisation with R",
    "section": "4.2 Designing An Interactive Treemap",
    "text": "4.2 Designing An Interactive Treemap\nThe codes below perform two processes.\n\ntreemap() is used to build a treemap by using selected variables in condominium data.frame. The treemap created is save as object called tm.\n\n\ntm &lt;- treemap(realis2018_summarised,\n        index=c(\"Planning Region\", \"Planning Area\"),\n        vSize=\"Total Unit Sold\",\n        vColor=\"Median Unit Price ($ psm)\",\n        type=\"value\",\n        title=\"Private Residential Property Sold, 2017\",\n        title.legend = \"Median Unit Price (S$ per sq. m)\")\n\n\n\n\n\nThen d3tree() is used to build an interactive treemap.\n\n\nd3tree(tm,rootname = \"Singapore\")"
  },
  {
    "objectID": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "href": "In-class_Ex/In-class_Ex1/In-class_Ex1.html",
    "title": "In-class Exercise 1",
    "section": "",
    "text": "Getting Started\n\nLoading R packageImporting PISA dataFiltering Singapore data\n\n\nIn this in-class exercise, two R packages will be used. They are:\n\ntidyverse, and\nhaven\n\nThe code chunk used is as follows:\n\npacman::p_load(tidyverse,haven)\n\n\n\nThe code chunk below uses read_sas() of haven to import PISA data into R environment.\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\n\n\n\nThe code chunk below uses [filter()] to filter country code of Singapore only\n\nstu_qqq_SG &lt;- stu_qqq %&gt;%\n  filter(CNT == \"SGP\")\n\n\nwrite_rds(stu_qqq_SG,\n          \"data/stu_qqq_SG.rds\")\n\n\nstu_qqq_SG &lt;- read_rds(\"data/stu_qqq_SG.rds\")"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "",
    "text": "The purpose of this exercise is to enhance the original visualization created by a classmate. The focus will be based on the improvement in its clarity and aesthetics."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#installing-r-packages",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#installing-r-packages",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "2.1 Installing R packages",
    "text": "2.1 Installing R packages\nThe code chunk below uses p_load() of pacman package to check if multiple packages are installed in the computer. If they are, then they will be launched into R.\n\npacman::p_load(tidyverse, haven, ggrepel, patchwork,ggplot2, \n               ggthemes, hrbrthemes,dplyr,tidyr,knitr,ggridges)"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#importing-data",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "2.2 Importing Data",
    "text": "2.2 Importing Data\n\nstu_qqq &lt;- read_sas(\"data/cy08msp_stu_qqq.sas7bdat\")\nstu_qqq_SG &lt;- stu_qqq %&gt;% \n  filter(CNT ==\"SGP\")\n\n# Include additional variable which is \"school type:STRATUM\" \nRelated_math_read_scie_data &lt;- stu_qqq_SG %&gt;%\n  select(contains(c(\"ID\",\"ST004D01T\",\"math\", \"read\", \"scie\",\"ST259Q01JA\",\n                    \"ST259Q02JA\",\"ST005Q01JA\",\"ST007Q01JA\",\"STRATUM\")))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#wrangling-data",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#wrangling-data",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "2.3 Wrangling Data",
    "text": "2.3 Wrangling Data\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;%\n  mutate(avg_pvMATH = rowMeans(select(., ends_with(\"Math\")), na.rm = TRUE))\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;%\n  mutate(avg_pvREAD = rowMeans(select(., ends_with(\"READ\")), na.rm = TRUE))\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;%\n  mutate(avg_pvSCIE = rowMeans(select(., ends_with(\"SCIE\")), na.rm = TRUE))\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  mutate(avg_pvMATH_school = mean(avg_pvMATH, na.rm = TRUE))\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  mutate(avg_pvREAD_school = mean(avg_pvREAD, na.rm = TRUE))\n\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;% \n  group_by(CNTSCHID) %&gt;%\n  mutate(avg_pvSCIE_school = mean(avg_pvSCIE, na.rm = TRUE))"
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#distributions-of-mathsreadscience",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#distributions-of-mathsreadscience",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.1 Distributions of Maths/Read/Science",
    "text": "3.1 Distributions of Maths/Read/Science\n\nOriginal Design\nThe histograms below are designed to reveal the distribution of performance across subjects.\n\n\nCode\np1 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvMATH)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  geom_vline(aes(xintercept = median(avg_pvMATH)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = median(Related_math_read_scie_data$avg_pvMATH), y = 30, \n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvMATH), 2)), \n           vjust = 1, color = \"red\") +\n  labs(y = \"Count\")\n\np2 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvREAD)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  geom_vline(aes(xintercept = median(avg_pvREAD)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = median(Related_math_read_scie_data$avg_pvREAD), y = 30, \n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvREAD), 2)), \n           vjust = 1, color = \"red\") +\n  labs(y = \"Count\")\n\np3 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvSCIE)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"grey\") +\n  geom_vline(aes(xintercept = median(avg_pvSCIE)), color = \"red\", linetype = \"dashed\") +\n  annotate(\"text\", x = median(Related_math_read_scie_data$avg_pvSCIE), y = 30, \n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvSCIE), 2)), \n           vjust = 1, color = \"red\") +\n  labs(y = \"Count\")\n\np1 + p2 + p3 +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"Distributions of Maths/Reading/Science with Median Lines\", tag_levels = \"I\")\n\n\n\n\n\n\n\nCritique\nIn this section, feedback on original visualization is provided along with suggestions for improvement.\n\n\n\n\n\n\n\n\nCriteria\nOriginal Design\nProposed Design\n\n\n\n\nClarity\n\nThe graph is suitable to reveal the distribution of subjects’ scores.\nThe axis titles are not labeled clearly.\nThe tag (I , II,III) is provided to differentiate each graph but it could be more descriptive.\nAnnotation of the median and the dashed lines are included. This provides more insight about the graph.\n\nTo enhance the visualization in terms of clarity, I would recommend the following:\n\nChange the main title to be more concise and put in the middle\nChange the name of axis titles to be clearer\nBe more specific about the tag by including subjects\nAdd the mean and remain the median to indicate skewness.\nInclude box plots the show outliers and the overall distribution more effectively\n\n\n\nAesthetics\n\nThe arrangement of three plots is clear and enables to compare distribution across subjects.\nThe colors used for the histogram bars and the background are similar. This could reduce visual contrast.\nThe scales on the axes are not aligned across all graphs.\nAnnotation is overlapped with the bars. This makes them hard to read.\n\nFor better aesthetics in the graphs, the following improvements are recommended:\n\nUse a different color for each bars to differentiate between subjects and make sure that those colors are contrast with background as well\nAlign the scale of x-axis and y-axis for all graphs\nShift annotations to a place where they can be seen clearly\n\n\n\n\n\n\nSketch\nA sketch for proposed design is shown as below.\n\n\n\nRemake\n\n\nCode\n#math scores\np1 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvMATH)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"#FBD1D5\") +\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  geom_vline(aes(xintercept = median(avg_pvMATH)), color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 800, y = 1800,\n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvMATH), 2)), \n           vjust = 1, color = \"red\",size= 6) +\n  geom_vline(aes(xintercept = mean(avg_pvMATH)), color = \"blue\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 400, y = 1800,\n           label = paste(\"Mean:\", round(mean(Related_math_read_scie_data$avg_pvMATH), 2)), \n           vjust = 1, color = \"blue\",size= 6) +\n  labs(y = \"No.of Students\", x= \"Average Math Scores\")+\n  ggtitle(\"I: Math\")+\n    geom_boxplot(width = 50,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.8,\n               outlier.size = 1.5,\n               position = position_nudge(y = -55))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18)) \n\n#Reading scores\np2 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvREAD)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"#E0E994\") +\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  geom_vline(aes(xintercept = median(avg_pvREAD)), color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 850, y = 1800,\n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvREAD), 2)), \n           vjust = 1, color = \"red\",size= 6) +\n  geom_vline(aes(xintercept = mean(avg_pvREAD)), color = \"blue\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 300, y = 1800,\n           label = paste(\"Mean:\", round(mean(Related_math_read_scie_data$avg_pvREAD), 2)), \n           vjust = 1, color = \"blue\",size= 6) +\n  labs(y = \"No.of Students\", x= \"Average Reading Scores\")+\n  ggtitle(\"II: Reading\")+\n    geom_boxplot(width = 50,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.8,\n               outlier.size = 1.5,\n               position = position_nudge(y = -55))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18))  \n\n#Science scores\np3 &lt;- ggplot(data=Related_math_read_scie_data, aes(x = avg_pvSCIE)) +\n  geom_histogram(bins=10, \n                 boundary = 100,\n                 color=\"black\", \n                 fill=\"#F8DC88\") +\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  geom_vline(aes(xintercept = median(avg_pvSCIE)), color = \"red\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 800, y = 1800,\n           label = paste(\"Median:\", round(median(Related_math_read_scie_data$avg_pvSCIE), 2)), \n           vjust = 1, color = \"red\",size= 6) +\n  geom_vline(aes(xintercept = mean(avg_pvSCIE)), color = \"blue\", linetype = \"dashed\", size = 1) +\n  annotate(\"text\", x = 350, y = 1800,\n           label = paste(\"Mean:\", round(mean(Related_math_read_scie_data$avg_pvSCIE), 2)), \n           vjust = 1, color = \"blue\",size= 6) +\n  labs(y = \"No.of Students\", x= \"Average Science Scores\")+\n  ggtitle(\"III: Science\")+\n    geom_boxplot(width = 50,\n               fill = \"white\", \n               color = \"black\",\n               alpha = 0.4,\n               outlier.size = 1.5,\n               position = position_nudge(y = -55))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18)) \n\n\npatchwork &lt;- (p1+p2+p3) &\n  plot_annotation(title = \"Distributions of Performances across Subjects\",\n  theme = theme(plot.title = element_text(size = 26, \n                                          face = \"bold\",\n                                          hjust= 0.5, \n                                          margin = margin(t = 20, b = 20))))\n\npatchwork\n\n\n\n\n\n\n\n\n\n\n\nThe remake design displays the title “Distributions of Performances Across Subjects.” The x-axis is labeled as “Average [subject] Scores,” while the y-axis is labeled as “No. of Students.” Each graph is tagged with the relevant subject for clearer differentiation. Additionally, annotations and lines of the mean are included to indicate skewness. If the mean is to the left of the median, it implies a left-skewed distribution. Horizontal boxplots are included to present outliers and the overall distribution more effectively. The color bars of each graph are different and contrast well with the background. Both the x-axis and y-axis scales start at zero. Annotations are placed on the top and next to the dashed line. There are no overlap with other components. These improvement make the graph clearer and provide more useful insights of the data."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-gender-and-performances",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-gender-and-performances",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.2 The Relationship between Gender and Performances",
    "text": "3.2 The Relationship between Gender and Performances\n\nOriginal Design\nThe histograms below are designed to reveal the relationship between gender and performances across subjects.\n\n\nCode\np4 &lt;- ggplot(data = Related_math_read_scie_data, aes(x = avg_pvMATH, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, color = \"grey30\", position = \"identity\", alpha = 0.7) +\n  labs(x = \"avg_pvMATH\", y = \"Count\", fill = \"Gender\") +\n  scale_fill_manual(values = c(\"skyblue\", \"pink\"))\n\np5 &lt;- ggplot(data = Related_math_read_scie_data, aes(x = avg_pvREAD, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, color = \"grey30\", position = \"identity\", alpha = 0.7) +\n  labs(x = \"avg_pvREAD\", y = \"Count\", fill = \"Gender\") +\n  scale_fill_manual(values = c(\"skyblue\", \"pink\"))\n\np6 &lt;- ggplot(data = Related_math_read_scie_data, aes(x = avg_pvSCIE, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, color = \"grey30\", position = \"identity\", alpha = 0.7) +\n  labs(x = \"avg_pvSCIE\", y = \"Count\", fill = \"Gender\") +\n  scale_fill_manual(values = c(\"skyblue\", \"pink\"))\n\np4 + p5 + p6 +\n  plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"The Relationship between Gender and Performances\", tag_levels = \"I\")\n\n\n\n\n\n\n\nCritique\nIn this section, feedback on original visualization is provided along with suggestions for improvement.\n\n\n\n\n\n\n\n\nCriteria\nOriginal Design\nProposed Design\n\n\n\n\nClarity\n\nThe main title clear states the purpose the graph.\nThe graph tends to show the distribution of gender for each subject, but the overlapping bar make it difficult to distinguish between gender.\nThe axis titles are not labeled clearly.\nThe tag (I , II,III) is provided to differentiate each graph but it could be more descriptive.\nThe legend is not identified clearly. Using 1 and 2 may cause a confusion regarding which gender is referred to.\nThe color coding for gender could lead to misunderstanding. According to the data, “1” refers female and “2” refers male, but the blue color is assigned to 1 and pink to 2.\n\nTo enhance the visualization in terms of clarity, I would recommend the following:\n\nSeparate the female and male graph but each graph has the overall subject distribution to illustrate which each gender’s contribution is better and place it side by side for easy comparison\nUse blue color for male and pink for female to avoid confusion\nPlace the main title in the middle\nChange the name of axis titles to be clearer\nBe more specific about the tag by including subjects\nModify the legend to clearly indicate gender and avoid number indicators that can cause confusion\n\n\n\nAesthetics\n\nThe overall arrangement of three plots is clear and allow easy comparison.\nThe scales on the axes are not aligned across all graphs.\n\nFor better aesthetics in the graphs, the following improvements are recommended:\n\nApply gray color for overall subject distribution to differentiate the distribution of males and females more effectively\nAlign the scale of x-axis and y-axis for all graphs\n\n\n\n\n\n\nSketch\nA sketch for proposed design is shown as below.\n\n\n\nRemake\n\n\nCode\n#Math scores\nMath_data &lt;- Related_math_read_scie_data[\"avg_pvMATH\"]\np1 &lt;- ggplot(data = Related_math_read_scie_data, \n       aes(x = avg_pvMATH, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, data= Math_data, fill = \"#616161\", alpha = 0.8) +\n  geom_histogram(bins=10, color=\"black\") + \n  facet_wrap(~ ST004D01T)+\n  labs(y = \"No.of Students\", x= \"Average Math Scores\", fill=\"Gender\")+\n  ggtitle(\"I: Math\")+ \n  scale_fill_manual(values = c(\"pink\", \"skyblue\"),\n                    labels = c(\"Female\", \"Male\"))+\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18),\n  legend.text = element_text(size = 12),  \n  legend.title = element_text(size = 14),\n  strip.text = element_blank())\n\n#Reading scores\nReading_data &lt;- Related_math_read_scie_data[\"avg_pvREAD\"]\np2 &lt;-ggplot(data = Related_math_read_scie_data, \n       aes(x = avg_pvREAD, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, data= Reading_data, fill = \"#616161\", alpha = 0.8) +\n  geom_histogram(bins=10, color=\"black\") + \n  facet_wrap(~ ST004D01T)+\n  labs(y = \"No.of Students\", x= \"Average Reading Scores\", fill=\"Gender\")+\n  ggtitle(\"II: Reading\")+ \n  scale_fill_manual(values = c(\"pink\", \"skyblue\"),\n                    labels = c(\"Female\", \"Male\"))+\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18),\n  legend.text = element_text(size = 12),  \n  legend.title = element_text(size = 14),\n  strip.text = element_blank())\n\n#Science scores\nScience_data &lt;- Related_math_read_scie_data[\"avg_pvSCIE\"]\np3 &lt;-ggplot(data = Related_math_read_scie_data, \n       aes(x = avg_pvSCIE, fill = factor(ST004D01T))) +\n  geom_histogram(bins = 10, data= Science_data, fill = \"#616161\", alpha = 0.8) +\n  geom_histogram(bins=10, color=\"black\") + \n  facet_wrap(~ ST004D01T)+\n  labs(y = \"No.of Students\", x= \"Average Science Scores\", fill=\"Gender\")+\n  ggtitle(\"III: Science\")+ \n  scale_fill_manual(values = c(\"pink\", \"skyblue\"),\n                    labels = c(\"Female\", \"Male\"))+\n  coord_cartesian(xlim=c(0,1000),ylim = c(0,1900))+\n  theme(plot.title = element_text(size = 22),\n  axis.title = element_text(size = 20),\n  axis.text = element_text(size = 18),\n  legend.text = element_text(size = 12),  \n  legend.title = element_text(size = 14),\n  strip.text = element_blank())\n\npatchwork2 &lt;- (p1/p2/p3) &\n  plot_annotation(title = \"The Relationship between Gender and Performances\",\n  theme = theme(plot.title = element_text(size = 26, \n                                          face = \"bold\",\n                                          hjust= 0.5, \n                                          margin = margin(t = 20, b = 20))))\n\npatchwork2\n\n\n\n\n\n\n\n\n\n\n\nThe redesigned plots illustrates the relationship between gender and performance. By placing the graphs for each gender side by side, it becomes easier to compare their performance in each subject. It is clearer and not overlapped. The x-axis is labeled as “Average [subject] Scores,” while the y-axis is labeled as “No. of Students.” Each graph is tagged with the relevant subject for clearer differentiation. Also, the title is shift into the middle. Furthermore, the legend has been modified to represent “1” as female and “2” as male. Also, blue is used represent males and pink for females. Each graph uses a grey color for overall subject distribution to distinguish more effectively. The scales of the x-axis and y-axis are consistently aligned across all graphs. These enhancements make the graph clearer and effectively highlight the performance relationship as the graphs show that the distribution for males in math and science is slightly more right-skewed compared to that of females. This implies that males tend to perform better in these subject than females."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-school-and-performances",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-school-and-performances",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.3 The Relationship between School and Performances",
    "text": "3.3 The Relationship between School and Performances\n\nOriginal Design\nThe scatter plots below are designed to reveal the correlation between school and performances across subjects.\n\n\nCode\np7 &lt;- ggplot(data = Related_math_read_scie_data, \n             aes(x = CNTSCHID, \n                 y = avg_pvMATH_school)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm, \n              size = 0.5) +  \n  labs(x = \"School ID\", y = \"Average PV Maths\")\n\np8 &lt;- ggplot(data = Related_math_read_scie_data, \n             aes(x = CNTSCHID, \n                 y = avg_pvREAD_school)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm, \n              size = 0.5) +\n  labs(x = \"School ID\", y = \"Average PV Read\")\n\np9 &lt;- ggplot(data = Related_math_read_scie_data, \n             aes(x = CNTSCHID, \n                 y = avg_pvSCIE_school)) +\n  geom_point() +\n  geom_smooth(formula = y~x, method = lm, \n              size = 0.5) +  \n  labs(x = \"School ID\", y = \"Average PV Scie\")\n\np7 + p8 + p9 +\n    plot_layout(guides = \"collect\") +\n  plot_annotation(title = \"The Relationship between School and Performances\", tag_levels = \"I\")\n\n\n\n\n\n\n\nCritique\nIn this section, feedback on original visualization is provided along with suggestions for improvement.\n\n\n\n\n\n\n\n\nCriteria\nOriginal Design\nProposed Design\n\n\n\n\nClarity\n\nThe main title clear states the purpose the plot.\nThe scatter plots does not reveal any explicit insights about the relationship between school and performances.\nThe y-axis title is not labeled clearly.\nThe tag (I , II,III) is provided to differentiate each graph but it could be more descriptive.\n\nTo enhance the visualization in terms of clarity, I would recommend the following:\n\nUse another variable which is type of school instead of school ID for better insight about the data\nUse boxplots instead of scatter plots since there are only two type of schools, so it is easier to compare.\nPlace the main title in the middle\nChange the name of y-axis title to be clearer\nBe more specific about the tag by including subjects\n\n\n\nAesthetics\n\nThe x-axis text is overlapped.\nThe scales on the axes are not aligned across all graphs.\n\nFor better aesthetics in the graphs, the following improvements are recommended:\n\nAlign the scale of x-axis and y-axis for all graphs\nUse different color for boxplots to identify each school type.\n\n\n\n\n\n\nSketch\nA sketch for proposed design is shown as below.\n\n\n\nRemake\n\n\nCode\n#Recode school types\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;%\n  mutate(STRATUM = recode(STRATUM,\n                         \"SGP01\" = \"Public School\",\n                         \"SGP03\" = \"Private School\"))\n\n#Math scores\np1 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvMATH, x=STRATUM,fill=STRATUM)) +\n  geom_boxplot()+\n  coord_cartesian(ylim = c(0,900))+\n  theme(legend.position = \"none\")+\n  scale_fill_manual(values = c(\"#F9B757\", \"#AFD583\"),\n                    labels = c(\"Private School\", \"Public School\"))+\n  labs(y = \"Average Math Scores\", x= \"School Type\", fill=\"School Type\")+\n  ggtitle(\"I: Math\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title.y = element_text(size = 24),\n          axis.title.x = element_blank(),\n          axis.text= element_text(size = 24))\n\n#Reading scores\np2 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvREAD, x=STRATUM,fill=STRATUM)) +\n  geom_boxplot()+\n  coord_cartesian(ylim = c(0,900))+\n  theme(legend.position = \"none\")+\n  scale_fill_manual(values = c(\"#F9B757\", \"#AFD583\"),\n                    labels = c(\"Private School\", \"Public School\"))+\n  labs(y = \"Average Reading Scores\", x= \"School Type\", fill=\"School Type\")+\n  ggtitle(\"II: Reading\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title.y = element_text(size = 24),\n          axis.title.x = element_blank(),\n          axis.text= element_text(size = 24))\n\n#Science scores\np3 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvSCIE, x=STRATUM,fill=STRATUM)) +\n  geom_boxplot()+\n  coord_cartesian(ylim = c(0,900))+\n  scale_fill_manual(values = c(\"#F9B757\", \"#AFD583\"),\n                    labels = c(\"Private School\", \"Public School\"))+\n  labs(y = \"Average Science Scores\", x= \"School Type\", fill=\"School Type\")+\n  ggtitle(\"III: Science\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title.y = element_text(size = 24),\n          axis.title.x = element_blank(),\n          axis.text= element_text(size = 24),\n          legend.text = element_text(size = 18),  \n          legend.title = element_text(size = 18),\n          legend.key.size = unit(1, \"cm\"))\n\npatchwork3 &lt;- (p1+p2+p3) &\n  plot_annotation(title = \"The Relationship between School and Performances\",\n  theme = theme(plot.title = element_text(size = 30, \n                                          face = \"bold\",\n                                          hjust= 0.5, \n                                          margin = margin(t = 20, b = 20))))\npatchwork3\n\n\n\n\n\n\n\n\n\n\n\nThe redesigned plots illustrates the relationship between school type and performance. Instead of school ID, type of school variable is used. Moreover, the boxplots are used instead of scatter plots because there are only two school type. The y-axis is labeled as “Average [subject] Scores”, and x-axis is no longer overlapped. Each graph is tagged with the relevant subject for clearer differentiation, and the title is shift to the middle. Furthermore, the scales of the x-axis and y-axis are consistently aligned across all graph and different colors are used to differentiate school type. These enhancements provide more explicit insights about the relationship between school and performances. It clearly reveals that private school tend to performance better than public school."
  },
  {
    "objectID": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-socioeconomic-status-and-performances",
    "href": "Take-home_Ex/Take-home_Ex2/Take-home_Ex2.html#the-relationship-between-socioeconomic-status-and-performances",
    "title": "Take-home Exercise 2: DataVis Makeover",
    "section": "3.4 The Relationship between Socioeconomic Status and Performances",
    "text": "3.4 The Relationship between Socioeconomic Status and Performances\n\nOriginal Design\nThe scatter plots below are designed to reveal the relationship between socioeconomic status and performances across subjects.\n\n\nCode\nRelated_math_read_scie_data &lt;- Related_math_read_scie_data %&gt;%\n  mutate(Parent_Edu_level = ST005Q01JA + ST007Q01JA)\n\ndf &lt;- Related_math_read_scie_data\n\nggplot(df, aes(x = Parent_Edu_level)) +\n  geom_point(aes(y = avg_pvMATH, color = \"Math\"), na.rm = TRUE) +\n  geom_smooth(aes(y = avg_pvMATH, color = \"Math\"), method = \"lm\", se = FALSE, na.rm = TRUE) +\n  geom_point(aes(y = avg_pvREAD, color = \"Read\"), na.rm = TRUE) +\n  geom_smooth(aes(y = avg_pvREAD, color = \"Read\"), method = \"lm\", se = FALSE, na.rm = TRUE) +\n  geom_point(aes(y = avg_pvSCIE, color = \"Science\"), na.rm = TRUE) +\n  geom_smooth(aes(y = avg_pvSCIE, color = \"Science\"), method = \"lm\", se = FALSE, na.rm = TRUE) +\n  labs(title = \"Relationship between Performance and Socioeconomic Status\",\n       x = \"Socioeconomic Status (Lower values indicate higher status)\",\n       y = \"Average PV Score\") +\n  scale_color_manual(values = c(\"Math\" = \"blue\", \"Read\" = \"green\", \"Science\" = \"red\")) +\n  theme_minimal()\n\n\n\n\n\n\n\nCritique\nIn this section, feedback on original visualization is provided along with suggestions for improvement.\n\n\n\n\n\n\n\n\nCriteria\nOriginal Design\nProposed Design\n\n\n\n\nClarity\n\nIn this case, the scatter plots is not suitable to show the relationship between socioeconomic status and performances across different subjects. The overall plots make viewers confuse what is the purpose.\nThere is a lot of overlapping which lead to confusion\n\nTo enhance the visualization in terms of clarity, I would recommend the following:\n\nReplace scatter plots with boxplots for clearer insights\nSeparate the graphs by each subject to avoid confusion\nInclude sepecific title for each graph for clearer differentiation\nInclude the mean into boxplots so it is easier to see the trend\n\n\n\nAesthetics\n\nDifferent colors are used to differentiate between subjects.\n\nFor better aesthetics in the graphs, the following improvements are recommended:\n\nUse different colors for boxplots to identify each subject\nUse red color for the mean to make it clear\nAlign the scale of x-axis and y-axis for all graphs\n\n\n\n\n\n\nSketch\nA sketch for proposed design is shown as below.\n\n\n\nRemake\n\n\nCode\n#Math scores\np1 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvMATH, x=factor(Parent_Edu_level),fill=factor(Parent_Edu_level))) +\n  geom_boxplot(fill=\"#FBD1D5\")+\n  coord_cartesian(ylim = c(0,900))+\n  theme(legend.position = \"none\")+\n  labs(y = \"Average Math Scores\", x= \"Socioeconomic Status\", fill=\"Socioeconomic Status\")+\n  ggtitle(\"I: Math\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title = element_text(size = 24),\n          axis.text= element_text(size = 24))\n#Reading scores\np2 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvREAD, x=factor(Parent_Edu_level),fill=factor(Parent_Edu_level))) +\n  geom_boxplot(fill=\"#E0E994\")+\n  coord_cartesian(ylim = c(0,900))+\n  theme(legend.position = \"none\")+\n  labs(y = \"Average Reading Scores\", x= \"Socioeconomic Status\", fill=\"Socioeconomic Status\")+\n  ggtitle(\"II: Reading\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title = element_text(size = 24),\n          axis.text= element_text(size = 24))\n\n#Science scores\np3 &lt;- ggplot(data=Related_math_read_scie_data, \n       aes(y = avg_pvSCIE, x=factor(Parent_Edu_level),fill=factor(Parent_Edu_level))) +\n  geom_boxplot(fill=\"#F8DC88\")+\n  coord_cartesian(ylim = c(0,900))+\n  theme(legend.position = \"none\")+\n  labs(y = \"Average Science Scores\", x= \"Socioeconomic Status\", fill=\"Socioeconomic Status\")+\n  ggtitle(\"III: Science\")+\n  stat_summary(geom = \"point\",       \n               fun.y=\"mean\",         \n               colour =\"red\",        \n               size=4)+\n    theme(plot.title = element_text(size = 26),\n          axis.title = element_text(size = 24),\n          axis.text= element_text(size = 24))\n\npatchwork4 &lt;- (p1/p2/p3) &\n  plot_annotation(title = \"The Relationship between Socioeconomic Status and Performances\",\n  theme = theme(plot.title = element_text(size = 30, \n                                          face = \"bold\",\n                                          hjust= 0.5, \n                                          margin = margin(t = 20, b = 20))))\n\npatchwork4\n\n\n\n\n\n\n\n\n\n\n\nThe redesigned plots illustrates the relationship between socioeconomic status and performance. Boxplots is used instead of scatter plots for clarity. Also, the plots are separated based on subject and include the title. Moreover, the mean is included to clearly show the trend. Different colors is used for boxplots, and the mean is represented in red for visibility. This improvement reduce overlap and enhance differentiation between subjects. As a result, the plots reveal more clearer insights about the relationship. It indicates that students from higher socioeconomic status tend to perform better than those from the lower status."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "",
    "text": "In this hands-on exercise, we will mainly use tmap  package and other packages as following:\n\nreadr for importing delimited text file,\ntidyr for tidying data,\ndplyr for wrangling data and\nsf for handling geospatial data.\n\n\n\nThe code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(sf, tmap, tidyverse)\n\n\n\n\n\n\nThe code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kbuathang\\ISSS608_VAA\\Hands-on_Ex\\Hands-on_Ex7\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nNext, we will examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")\n\n\n\n\n\nWe need to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\n         rowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n       /`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\nFirst, we need to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper and lowercase. On the other hand, the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\n\n\n\n\nThing to learn from the code chunk above\n\n\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nLastly, we need to save output to .rds\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#loading-r-package",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#loading-r-package",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "",
    "text": "The code chunk below uses p_load() of pacman package to check if these packages are installed in the computer and load them onto your working R environment.\n\npacman::p_load(sf, tmap, tidyverse)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#importing-data",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#importing-data",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "",
    "text": "The code chunk below uses the st_read() function of sf package to import MP14_SUBZONE_WEB_PL shapefile into R as a simple feature data frame called mpsz.\n\nmpsz &lt;- st_read(dsn = \"data/geospatial\", \n                layer = \"MP14_SUBZONE_WEB_PL\")\n\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\kbuathang\\ISSS608_VAA\\Hands-on_Ex\\Hands-on_Ex7\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n\n\nNext, we will examine the content of mpsz by using the code chunk below.\n\nmpsz\n\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\nFirst 10 features:\n   OBJECTID SUBZONE_NO       SUBZONE_N SUBZONE_C CA_IND      PLN_AREA_N\n1         1          1    MARINA SOUTH    MSSZ01      Y    MARINA SOUTH\n2         2          1    PEARL'S HILL    OTSZ01      Y          OUTRAM\n3         3          3       BOAT QUAY    SRSZ03      Y SINGAPORE RIVER\n4         4          8  HENDERSON HILL    BMSZ08      N     BUKIT MERAH\n5         5          3         REDHILL    BMSZ03      N     BUKIT MERAH\n6         6          7  ALEXANDRA HILL    BMSZ07      N     BUKIT MERAH\n7         7          9   BUKIT HO SWEE    BMSZ09      N     BUKIT MERAH\n8         8          2     CLARKE QUAY    SRSZ02      Y SINGAPORE RIVER\n9         9         13 PASIR PANJANG 1    QTSZ13      N      QUEENSTOWN\n10       10          7       QUEENSWAY    QTSZ07      N      QUEENSTOWN\n   PLN_AREA_C       REGION_N REGION_C          INC_CRC FMEL_UPD_D   X_ADDR\n1          MS CENTRAL REGION       CR 5ED7EB253F99252E 2014-12-05 31595.84\n2          OT CENTRAL REGION       CR 8C7149B9EB32EEFC 2014-12-05 28679.06\n3          SR CENTRAL REGION       CR C35FEFF02B13E0E5 2014-12-05 29654.96\n4          BM CENTRAL REGION       CR 3775D82C5DDBEFBD 2014-12-05 26782.83\n5          BM CENTRAL REGION       CR 85D9ABEF0A40678F 2014-12-05 26201.96\n6          BM CENTRAL REGION       CR 9D286521EF5E3B59 2014-12-05 25358.82\n7          BM CENTRAL REGION       CR 7839A8577144EFE2 2014-12-05 27680.06\n8          SR CENTRAL REGION       CR 48661DC0FBA09F7A 2014-12-05 29253.21\n9          QT CENTRAL REGION       CR 1F721290C421BFAB 2014-12-05 22077.34\n10         QT CENTRAL REGION       CR 3580D2AFFBEE914C 2014-12-05 24168.31\n     Y_ADDR SHAPE_Leng SHAPE_Area                       geometry\n1  29220.19   5267.381  1630379.3 MULTIPOLYGON (((31495.56 30...\n2  29782.05   3506.107   559816.2 MULTIPOLYGON (((29092.28 30...\n3  29974.66   1740.926   160807.5 MULTIPOLYGON (((29932.33 29...\n4  29933.77   3313.625   595428.9 MULTIPOLYGON (((27131.28 30...\n5  30005.70   2825.594   387429.4 MULTIPOLYGON (((26451.03 30...\n6  29991.38   4428.913  1030378.8 MULTIPOLYGON (((25899.7 297...\n7  30230.86   3275.312   551732.0 MULTIPOLYGON (((27746.95 30...\n8  30222.86   2208.619   290184.7 MULTIPOLYGON (((29351.26 29...\n9  29893.78   6571.323  1084792.3 MULTIPOLYGON (((20996.49 30...\n10 30104.18   3454.239   631644.3 MULTIPOLYGON (((24472.11 29...\n\n\n\n\n\nThe task will be performed by using read_csv() function of readr package as shown in the code chunk below.\n\npopdata &lt;- read_csv(\"data/aspatial/respopagesextod2011to2020.csv\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#preparing-data",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#preparing-data",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "",
    "text": "We need to prepare a data table with year 2020 values. The data table should include the variables PA, SZ, YOUNG, ECONOMY ACTIVE, AGED, TOTAL, DEPENDENCY.\n\nYOUNG: age group 0 to 4 until age groyup 20 to 24,\nECONOMY ACTIVE: age group 25-29 until age group 60-64,\nAGED: age group 65 and above,\nTOTAL: all age group, and\nDEPENDENCY: the ratio between young and aged against economy active group\n\n\n\nThe following data wrangling and transformation functions will be used:\n\npivot_wider() of tidyr package, and\nmutate(), filter(), group_by() and select() of dplyr package\n\n\npopdata2020 &lt;- popdata %&gt;%\n  filter(Time == 2020) %&gt;%\n  group_by(PA, SZ, AG) %&gt;%\n  summarise(`POP` = sum(`Pop`)) %&gt;%\n  ungroup() %&gt;%\n  pivot_wider(names_from=AG, \n              values_from=POP) %&gt;%\n  mutate(YOUNG = rowSums(.[3:6])\n         +rowSums(.[12])) %&gt;%\nmutate(`ECONOMY ACTIVE` = rowSums(.[7:11])+\n         rowSums(.[13:15]))%&gt;%\nmutate(`AGED`=rowSums(.[16:21])) %&gt;%\nmutate(`TOTAL`=rowSums(.[3:21])) %&gt;%  \nmutate(`DEPENDENCY` = (`YOUNG` + `AGED`)\n       /`ECONOMY ACTIVE`) %&gt;%\n  select(`PA`, `SZ`, `YOUNG`, \n       `ECONOMY ACTIVE`, `AGED`, \n       `TOTAL`, `DEPENDENCY`)\n\n\n\n\nFirst, we need to convert the values in PA and SZ fields to uppercase. This is because the values of PA and SZ fields are made up of upper and lowercase. On the other hand, the SUBZONE_N and PLN_AREA_N are in uppercase.\n\npopdata2020 &lt;- popdata2020 %&gt;%\n  mutate_at(.vars = vars(PA, SZ), \n          .funs = funs(toupper)) %&gt;%\n  filter(`ECONOMY ACTIVE` &gt; 0)\n\nNext, left_join() of dplyr is used to join the geographical data and attribute table using planning subzone name e.g. SUBZONE_N and SZ as the common identifier.\n\nmpsz_pop2020 &lt;- left_join(mpsz, popdata2020,\n                          by = c(\"SUBZONE_N\" = \"SZ\"))\n\n\n\n\n\n\n\nThing to learn from the code chunk above\n\n\n\nleft_join() of dplyr package is used with mpsz simple feature data frame as the left data table is to ensure that the output will be a simple features data frame.\n\n\nLastly, we need to save output to .rds\n\nwrite_rds(mpsz_pop2020, \"data/rds/mpszpop2020.rds\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#plotting-a-choropleth-map-quickly-by-using-qtm",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.1 Plotting a choropleth map quickly by using qtm()",
    "text": "2.1 Plotting a choropleth map quickly by using qtm()\nThe code chunk below will draw a cartographic standard choropleth map as shown below.\n\ntmap_mode(\"plot\")\nqtm(mpsz_pop2020, \n    fill = \"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nThings to learn from the code chunk above\n\n\n\n\ntmap_mode() with “plot” option is used to produce a static map. For interactive mode, “view” option should be used.\nfill argument is used to map the attribute (i.e. DEPENDENCY)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#creating-a-choropleth-map-by-using-tmaps-elements",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.2 Creating a choropleth map by using tmap’s elements",
    "text": "2.2 Creating a choropleth map by using tmap’s elements\nThe disadvantge of qtm() is that it makes aesthetics of individual layers harder to control. To draw a high quality cartographic choropleth map, tmap’s drawing elements should be used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"Dependency ratio\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))\n\n\n\n\nIn the following sub-section, more tmap functions that is used to plot these elements.\n\n2.2.1 Drawing a base map\nThe basic building block of tmap is tm_shape() followed by one or more layer elemments such as tm_fill() and tm_polygons().\nIn the code chunk below, tm_shape() is used to define the input data (i.e mpsz_pop2020) and tm_polygons() is used to draw the planning subzone polygons\n\ntm_shape(mpsz_pop2020) +\n  tm_polygons()\n\n\n\n\n\n\n2.2.2 Drawing a choropleth map using tm_polygons()\nTo draw a choropleth map showing the geographical distribution of a selected variable by planning subzone, we just need to assign the target variable such as Dependency to tm_polygons().\n\ntm_shape(mpsz_pop2020)+\n  tm_polygons(\"DEPENDENCY\")\n\n\n\n\n\n\n\n\n\n\nThings to learn from tm_polygons()\n\n\n\n\nThe default interval binning used to draw the choropleth map is called “pretty”. A detailed discussion of the data classification methods supported by tmap will be provided later.\nThe default colour scheme used is YlOrRd of ColorBrewer. You will learn more about the color scheme later on\nBy default, missing values will be shaded in grey.\n\n\n\n\n\n2.2.3 Drawing a choropleth map using tm_fill() and tm_border()\ntm_polygons() is a wraper of tm_fill() and tm_border(). tm_fill() shades the polygons by using the default colour scheme and tm_borders() adds the borders of the shapefile onto the choropleth map.\nThe code chunk below draws a choropleth map by using tm_fill() alone.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\")\n\n\n\n\nTo add the boundary of the planning subzones, tm_borders will be used as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\") +\n  tm_borders(lwd = 0.1,  alpha = 1, lty= 2)\n\n\n\n\nThe alpha argument is used to define transparency number between 0 (totally transparent) and 1 (not transparent). By default, the alpha value of the col is used (normally 1).\nBeside alpha argument, there are three other arguments for tm_borders(), they are:\n\ncol = border colour,\nlwd = border line width. The default is 1, and\nlty = border line type. The default is “solid”."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#data-classification-methods-of-tmap",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#data-classification-methods-of-tmap",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.3 Data classification methods of tmap",
    "text": "2.3 Data classification methods of tmap\nMost choropleth maps employ some methods of data classification. The point of classification is to take a large number of observations and group them into data ranges or classes.\ntmap provides a total ten data classification methods, namely: fixed, sd, equal, pretty (default), quantile, kmeans, hclust, bclust, fisher, and jenks.\nTo define a data classification method, the style argument of tm_fill() or tm_polygons() will be used.\n\n2.3.1 Plotting choropleth maps with built-in classification methods\nThe code chunk below shows a quantile data classification that used 5 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"jenks\") +\n  tm_borders(alpha = 0.5, lwd = 0.5, lty= 3)\n\n\n\n\nIn the code chunk below, equal data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"equal\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, quantile data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"quantile\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, kmeans data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"kmeans\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nIn the code chunk below, bclust data classification method is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 5,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\nThe code chunk below shows a data classification that used 6 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\nThe code chunk below shows a data classification that used 10 classes\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 10,\n          style = \"bclust\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nCommittee Member: 1(1) 2(1) 3(1) 4(1) 5(1) 6(1) 7(1) 8(1) 9(1) 10(1)\nComputing Hierarchical Clustering\n\n\n\n\n2.3.2 Plotting choropleth map with custome break\nFor all the built-in styles, the category breaks are computed internally. In order to override these defaults, the breakpoints can be set explicitly by means of the breaks argument to the tm_fill(). It is important to note that, in tmap the breaks include a minimum and maximum. As a result, in order to end up with n categories, n+1 elements must be specified in the breaks option (the values must be in increasing order).\nBefore we get started, it is always a good practice to get some descriptive statistics on the variable before setting the break points. Code chunk below will be used to compute and display the descriptive statistics of DEPENDENCY field.\n\nsummary(mpsz_pop2020$DEPENDENCY)\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max.    NA's \n 0.1111  0.7147  0.7866  0.8585  0.8763 19.0000      92 \n\n\nWith reference to the results above, we set break point at 0.60, 0.70, 0.80, and 0.90. In addition, we also need to include a minimum and maximum, which we set at 0 and 100. Our breaks vector is thus c(0, 0.60, 0.70, 0.80, 0.90, 1.00)\nNow, we will plot the choropleth map by using the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          breaks = c(0, 0.60, 0.70, 0.80, 0.90, 1.00)) +\n  tm_borders(alpha = 0.5)"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#colour-scheme",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#colour-scheme",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.4 Colour Scheme",
    "text": "2.4 Colour Scheme\ntmap supports colour ramps either defined by the user or a set of predefined colour ramps from the RColorBrewer package.\n\n2.4.1 Using ColourBrewer palette\nTo change the colour, we assign the preferred colour to palette argument of tm_fill() as shown in the code chunk below.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          n = 6,\n          style = \"quantile\",\n          palette = \"Blues\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nTo reverse the colour shading, add a “-” prefix.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\",\n          style = \"quantile\",\n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5)\n\n\n\n\nNotice that the colour scheme has been reversed."
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#map-layouts",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#map-layouts",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.5 Map Layouts",
    "text": "2.5 Map Layouts\nMap layout refers to the combination of all map elements into a cohensive map. Map elements include among others the objects to be mapped, the title, the scale bar, the compass, margins and aspects ratios. Colour settings and data classification methods covered in the previous section relate to the palette and break-points are used to affect how the map looks.\n\n2.5.1 Map Legend\nIn tmap, several legend options are provided to change the placement, format and appearance of the legend.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"jenks\", \n          palette = \"Blues\", \n          legend.hist = TRUE, \n          legend.is.portrait = TRUE,\n          legend.hist.z = 0.1) +\n  tm_layout(main.title = \"Distribution of Dependency Ratio by planning subzone \\n(Jenks classification)\",\n            main.title.position = \"center\",\n            main.title.size = 1,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            legend.outside = FALSE,\n            legend.position = c(\"right\", \"bottom\"),\n            frame = FALSE) +\n  tm_borders(alpha = 0.5)\n\n\n\n\n\n\n2.5.2 Map style\ntmap allows a wide variety of layout settings to be changed. They can be called by using tmap_style().\nThe code chunk below shows the classic style is used.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"-Greens\") +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"classic\")\n\n\n\n\n\n\n2.5.3 Cartographic Furniture\ntmap also also provides arguments to draw other map furniture such as compass, scale bar and grid lines.\nIn the code chunk below, tm_compass(), tm_scale_bar() and tm_grid() are used to add compass, scale bar and grid lines onto the choropleth map.\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(\"DEPENDENCY\", \n          style = \"quantile\", \n          palette = \"Blues\",\n          title = \"No. of persons\") +\n  tm_layout(main.title = \"Distribution of Dependency Ratio \\nby planning subzone\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar(width = 0.15) +\n  tm_grid(lwd = 0.1, alpha = 0.2) +\n  tm_credits(\"Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\\n and Population data from Department of Statistics DOS\", \n             position = c(\"left\", \"bottom\"))+\n  tmap_style(\"white\")"
  },
  {
    "objectID": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#drawing-small-multiple-choropleth-maps",
    "href": "Hands-on_Ex/Hands-on_Ex7/Hands-on_Ex7a.html#drawing-small-multiple-choropleth-maps",
    "title": "Hands-on Exercise 7a: Choropleth Mapping with R",
    "section": "2.6 Drawing Small Multiple Choropleth Maps",
    "text": "2.6 Drawing Small Multiple Choropleth Maps\nSmall multiple maps, also referred to as facet maps, are composed of many maps arrange side-by-side, and sometimes stacked vertically. Small multiple maps enable the visualisation of how spatial relationships change with respect to another variable, such as time.\nIn tmap, small multiple maps can be plotted in three ways:\n\nby assigning multiple values to at least one of the asthetic arguments,\nby defining a group-by variable in tm_facets(), and\nby creating multiple stand-alone maps with tmap_arrange().\n\n\n2.6.1 By assigning multiple values to at least one of the aesthetic arguments\nIn this example, small multiple choropleth maps are created by defining ncols in tm_fill()\n\ntm_shape(mpsz_pop2020)+\n  tm_fill(c(\"YOUNG\", \"AGED\"),\n          style = \"equal\", \n          palette = \"Blues\") +\n  tm_layout(legend.position = c(\"right\", \"bottom\")) +\n  tm_borders(alpha = 0.5) +\n  tmap_style(\"white\")\n\n\n\n\nIn this example, small multiple choropleth maps are created by assigning multiple values to at least one of the aesthetic arguments\n\ntm_shape(mpsz_pop2020)+ \n  tm_polygons(c(\"DEPENDENCY\",\"AGED\"),\n          style = c(\"equal\", \"quantile\"), \n          palette = list(\"Blues\",\"Greens\")) +\n  tm_layout(legend.position = c(\"right\", \"bottom\"))"
  }
]